{
  "contractName": "LiquidityLock",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferPrimary",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "primary",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_liquidity",
          "type": "uint256"
        },
        {
          "name": "_secretary",
          "type": "address"
        },
        {
          "name": "_dai",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimaryTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "liquid",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferPrimary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"liquid\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"primary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_liquidity\",\"type\":\"uint256\"},{\"name\":\"_secretary\",\"type\":\"address\"},{\"name\":\"_dai\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimaryTransferred\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"blOX Consulting LLC\\r Date: 08.26.2019\\r Liquidity Contract for Secretary to post stake into \\r Administrator remittance should always pay out secretary\\r\",\"methods\":{\"constructor\":{\"params\":{\"_dai\":\"the address of the Dai ERC20 contract\\r\",\"_liquidity\":\"the minimum required liquidity to satisfy the contract\\r\",\"_secretary\":\"the beneficiary address of the timelock\\r\"}},\"liquid()\":{\"return\":\"bool true if the contract's Dai balance is greater than \\r        liquidity requirement defined at construction, and false otherwise\\r\"},\"primary()\":{\"return\":\"the address of the primary.\"},\"transferPrimary(address)\":{\"details\":\"Transfers contract to a new primary.\",\"params\":{\"recipient\":\"The address of new primary.\"}}}},\"userdoc\":{\"methods\":{\"constructor\":\"Construct a new Liquidity Contract\\r\",\"liquid()\":{\"notice\":\"Determine if the liquidity contract is sufficienty liquid\\r\"},\"withdraw()\":{\"notice\":\"Withdraw the current balance to the Secretary\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Coda/Desktop/The Smart Contract/TandaPay-Contracts/contracts/LiquidityLock.sol\":\"LiquidityLock\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Coda/Desktop/The Smart Contract/TandaPay-Contracts/contracts/LiquidityLock.sol\":{\"keccak256\":\"0x0b198d125ff908a92c5d2fdfa7076fff6229b9e267f72bc67dc7225e02897a3e\",\"urls\":[\"bzzr://da1a543ebae2d721f3181e78a5c2c3465ee975c095c8cd72b119d434c8bf1a2f\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/ownership/Secondary.sol\":{\"keccak256\":\"0xa5f5ed53adb91ab6a16bee78b255b4b8ed59945bd5c9a7b360d8a62fc63b8da0\",\"urls\":[\"bzzr://2dd07a98e47fe608668d8d3a6591b27e5bd884cdf2f2e6dbd8e571f3a43ea8e3\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405160608061056e8339810180604052606081101561003057600080fd5b508051602080830151604093840151600080546001600160a01b03191633179081905585516001600160a01b0391909116815294519394919390927f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d9928290030190a1600192909255600280546001600160a01b039283166001600160a01b0319918216179091556003805492909316911617905561049a806100d46000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632348238c146100515780633ccfd60b14610079578063a68fee8714610093578063c6dbdf61146100af575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b03166100d3565b005b6100816101c1565b60408051918252519081900360200190f35b61009b610356565b604080519115158252519081900360200190f35b6100b76103e0565b604080516001600160a01b039092168252519081900360200190f35b6000546001600160a01b0316331461011f57604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610443602c913960400191505060405180910390fd5b6001600160a01b03811661016757604051600160e51b62461bcd02815260040180806020018281038252602a815260200180610419602a913960400191505060405180910390fd5b600080546001600160a01b0319166001600160a01b03838116919091179182905560408051929091168252517f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d9916020908290030190a150565b600080546001600160a01b0316331461020e57604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610443602c913960400191505060405180910390fd5b60035460408051600160e01b6370a0823102815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561025c57600080fd5b505afa158015610270573d6000803e3d6000fd5b505050506040513d602081101561028657600080fd5b50519050806102c957604051600160e51b62461bcd0281526004018080602001828103825260298152602001806103f06029913960400191505060405180910390fd5b60035460025460408051600160e01b63a9059cbb0281526001600160a01b039283166004820152602481018590529051919092169163a9059cbb9160448083019260209291908290030181600087803b15801561032557600080fd5b505af1158015610339573d6000803e3d6000fd5b505050506040513d602081101561034f57600080fd5b5090919050565b60035460408051600160e01b6370a08231028152306004820152905160009283926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b1580156103a957600080fd5b505afa1580156103bd573d6000803e3d6000fd5b505050506040513d60208110156103d357600080fd5b5051600154111591505090565b6000546001600160a01b03169056fe4e6f2044616920696e204c697175696469747920436f6e747261637420746f205769746864726177215365636f6e646172793a206e6577207072696d61727920697320746865207a65726f20616464726573735365636f6e646172793a2063616c6c6572206973206e6f7420746865207072696d617279206163636f756e74a165627a7a72305820b664a4429bd069555acced3ec6af7427e6111e9d2aad9d5581ab96a57983c8710029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80632348238c146100515780633ccfd60b14610079578063a68fee8714610093578063c6dbdf61146100af575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b03166100d3565b005b6100816101c1565b60408051918252519081900360200190f35b61009b610356565b604080519115158252519081900360200190f35b6100b76103e0565b604080516001600160a01b039092168252519081900360200190f35b6000546001600160a01b0316331461011f57604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610443602c913960400191505060405180910390fd5b6001600160a01b03811661016757604051600160e51b62461bcd02815260040180806020018281038252602a815260200180610419602a913960400191505060405180910390fd5b600080546001600160a01b0319166001600160a01b03838116919091179182905560408051929091168252517f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d9916020908290030190a150565b600080546001600160a01b0316331461020e57604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610443602c913960400191505060405180910390fd5b60035460408051600160e01b6370a0823102815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561025c57600080fd5b505afa158015610270573d6000803e3d6000fd5b505050506040513d602081101561028657600080fd5b50519050806102c957604051600160e51b62461bcd0281526004018080602001828103825260298152602001806103f06029913960400191505060405180910390fd5b60035460025460408051600160e01b63a9059cbb0281526001600160a01b039283166004820152602481018590529051919092169163a9059cbb9160448083019260209291908290030181600087803b15801561032557600080fd5b505af1158015610339573d6000803e3d6000fd5b505050506040513d602081101561034f57600080fd5b5090919050565b60035460408051600160e01b6370a08231028152306004820152905160009283926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b1580156103a957600080fd5b505afa1580156103bd573d6000803e3d6000fd5b505050506040513d60208110156103d357600080fd5b5051600154111591505090565b6000546001600160a01b03169056fe4e6f2044616920696e204c697175696469747920436f6e747261637420746f205769746864726177215365636f6e646172793a206e6577207072696d61727920697320746865207a65726f20616464726573735365636f6e646172793a2063616c6c6572206973206e6f7420746865207072696d617279206163636f756e74a165627a7a72305820b664a4429bd069555acced3ec6af7427e6111e9d2aad9d5581ab96a57983c8710029",
  "sourceMap": "414:1296:4:-;;;823:173;8:9:-1;5:2;;;30:1;27;20:12;5:2;823:173:4;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;823:173:4;;;;;;;;;;;;459:8:10;:21;;-1:-1:-1;;;;;;459:21:10;470:10;459:21;;;;;495:28;;-1:-1:-1;;;;;514:8:10;;;495:28;;;;823:173:4;;;;;;495:28:10;;;;;;;;904:9:4;:22;;;;937:9;:22;;-1:-1:-1;;;;;937:22:4;;;-1:-1:-1;;;;;;937:22:4;;;;;;;970:3;:18;;;;;;;;;;;-1:-1:-1;;414:1296:4;-1:-1:-1;414:1296:4;;",
  "deployedSourceMap": "414:1296:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;414:1296:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:231:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1022:231:10;-1:-1:-1;;;;;1022:231:10;;:::i;:::-;;1469:238:4;;;:::i;:::-;;;;;;;;;;;;;;;;1244:145;;;:::i;:::-;;;;;;;;;;;;;;;;;;818:81:10;;;:::i;:::-;;;;-1:-1:-1;;;;;818:81:10;;;;;;;;;;;;;;1022:231;678:8;;-1:-1:-1;;;;;678:8:10;664:10;:22;656:79;;;;-1:-1:-1;;;;;656:79:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1103:23:10;;1095:78;;;;-1:-1:-1;;;;;1095:78:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1183:8;:20;;-1:-1:-1;;;;;;1183:20:10;-1:-1:-1;;;;;1183:20:10;;;;;;;;;;;1218:28;;;1237:8;;;;1218:28;;;;;;;;;;;;;1022:231;:::o;1469:238:4:-;1517:12;678:8:10;;-1:-1:-1;;;;;678:8:10;664:10;:22;656:79;;;;-1:-1:-1;;;;;656:79:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1552:3:4;;:28;;;-1:-1:-1;;;;;1552:28:4;;1574:4;1552:28;;;;;;-1:-1:-1;;;;;1552:3:4;;;;-1:-1:-1;;1552:28:4;;;;;;;;;;;;;;;:3;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;1552:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1552:28:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1552:28:4;;-1:-1:-1;1599:11:4;1591:65;;;;-1:-1:-1;;;;;1591:65:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:3;;1680:9;;1667:32;;;-1:-1:-1;;;;;1667:32:4;;-1:-1:-1;;;;;1680:9:4;;;1667:32;;;;;;;;;;;;:3;;;;;-1:-1:-1;;1667:32:4;;;;;;;;;;;;;;-1:-1:-1;1667:3:4;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;1667:32:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1667:32:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1469:238:4;;;-1:-1:-1;1469:238:4:o;1244:145::-;1315:3;;:28;;;-1:-1:-1;;;;;1315:28:4;;1337:4;1315:28;;;;;;-1:-1:-1;;;;;;;;;1315:3:4;;;;-1:-1:-1;;1315:28:4;;;;;;;;;;;;;;;:3;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;1315:28:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1315:28:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1315:28:4;1372:9;;-1:-1:-1;1361:20:4;;-1:-1:-1;;1244:145:4;:::o;818:81:10:-;858:7;884:8;-1:-1:-1;;;;;884:8:10;;818:81::o",
  "source": "pragma solidity >= 0.4.0 < 0.7.0;\r\n\r\nimport 'openzeppelin-solidity/contracts/ownership/Secondary.sol';\r\nimport 'openzeppelin-solidity/contracts/token/ERC20/IERC20.sol';\r\nimport 'openzeppelin-solidity/contracts/math/SafeMath.sol';\r\n\r\n/**\r\n * @author blOX Consulting LLC\r\n * Date: 08.26.2019\r\n * Liquidity Contract for Secretary to post stake into \r\n * Administrator remittance should always pay out secretary\r\n */\r\ncontract LiquidityLock is Secondary {\r\n\r\n    using SafeMath for uint;\r\n\r\n    uint liquidity;\r\n    address secretary;\r\n\r\n    IERC20 dai;\r\n\r\n    /**\r\n     * Construct a new Liquidity Contract\r\n     * @param _liquidity the minimum required liquidity to satisfy the contract\r\n     * @param _secretary the beneficiary address of the timelock\r\n     * @param _dai the address of the Dai ERC20 contract\r\n     */\r\n    constructor(uint _liquidity, address _secretary, address _dai) public {\r\n        liquidity = _liquidity;\r\n        secretary = _secretary;\r\n        dai = IERC20(_dai);\r\n    }\r\n\r\n    /**\r\n     * Determine if the liquidity contract is sufficienty liquid\r\n     * @return bool true if the contract's Dai balance is greater than \r\n     *         liquidity requirement defined at construction, and false otherwise\r\n     */\r\n    function liquid() public view returns (bool) {\r\n        uint balance = dai.balanceOf(address(this));\r\n        return balance >= liquidity;\r\n    }\r\n\r\n    /**\r\n     * Withdraw the current balance to the Secretary\r\n     */\r\n    function withdraw() public onlyPrimary returns (uint balance) {\r\n        balance = dai.balanceOf(address(this));\r\n        require(balance > 0, \"No Dai in Liquidity Contract to Withdraw!\");\r\n        dai.transfer(secretary, balance);\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\Coda\\Desktop\\The Smart Contract\\TandaPay-Contracts\\contracts\\LiquidityLock.sol",
  "ast": {
    "absolutePath": "/C/Users/Coda/Desktop/The Smart Contract/TandaPay-Contracts/contracts/LiquidityLock.sol",
    "exportedSymbols": {
      "LiquidityLock": [
        2618
      ]
    },
    "id": 2619,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2529,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Secondary.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Secondary.sol",
        "id": 2530,
        "nodeType": "ImportDirective",
        "scope": 2619,
        "sourceUnit": 3364,
        "src": "37:65:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 2531,
        "nodeType": "ImportDirective",
        "scope": 2619,
        "sourceUnit": 3858,
        "src": "104:64:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 2532,
        "nodeType": "ImportDirective",
        "scope": 2619,
        "sourceUnit": 3297,
        "src": "170:59:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2533,
              "name": "Secondary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3363,
              "src": "440:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Secondary_$3363",
                "typeString": "contract Secondary"
              }
            },
            "id": 2534,
            "nodeType": "InheritanceSpecifier",
            "src": "440:9:4"
          }
        ],
        "contractDependencies": [
          3363
        ],
        "contractKind": "contract",
        "documentation": "@author blOX Consulting LLC\r\nDate: 08.26.2019\r\nLiquidity Contract for Secretary to post stake into \r\nAdministrator remittance should always pay out secretary\r",
        "fullyImplemented": true,
        "id": 2618,
        "linearizedBaseContracts": [
          2618,
          3363
        ],
        "name": "LiquidityLock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2537,
            "libraryName": {
              "contractScope": null,
              "id": 2535,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3296,
              "src": "465:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3296",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "459:24:4",
            "typeName": {
              "id": 2536,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "478:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2539,
            "name": "liquidity",
            "nodeType": "VariableDeclaration",
            "scope": 2618,
            "src": "491:14:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2538,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "491:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2541,
            "name": "secretary",
            "nodeType": "VariableDeclaration",
            "scope": 2618,
            "src": "512:17:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2540,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "512:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2543,
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 2618,
            "src": "538:10:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3857",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2542,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3857,
              "src": "538:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3857",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2566,
              "nodeType": "Block",
              "src": "893:103:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2552,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2539,
                      "src": "904:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2553,
                      "name": "_liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2545,
                      "src": "916:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "904:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2555,
                  "nodeType": "ExpressionStatement",
                  "src": "904:22:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2556,
                      "name": "secretary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2541,
                      "src": "937:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2557,
                      "name": "_secretary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2547,
                      "src": "949:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "937:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2559,
                  "nodeType": "ExpressionStatement",
                  "src": "937:22:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2560,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2543,
                      "src": "970:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3857",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2562,
                          "name": "_dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2549,
                          "src": "983:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2561,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3857,
                        "src": "976:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$3857_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "976:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3857",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "970:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3857",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2565,
                  "nodeType": "ExpressionStatement",
                  "src": "970:18:4"
                }
              ]
            },
            "documentation": "Construct a new Liquidity Contract\r\n@param _liquidity the minimum required liquidity to satisfy the contract\r\n@param _secretary the beneficiary address of the timelock\r\n@param _dai the address of the Dai ERC20 contract\r",
            "id": 2567,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2545,
                  "name": "_liquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 2567,
                  "src": "835:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2544,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2547,
                  "name": "_secretary",
                  "nodeType": "VariableDeclaration",
                  "scope": 2567,
                  "src": "852:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2549,
                  "name": "_dai",
                  "nodeType": "VariableDeclaration",
                  "scope": 2567,
                  "src": "872:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "834:51:4"
            },
            "returnParameters": {
              "id": 2551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "893:0:4"
            },
            "scope": 2618,
            "src": "823:173:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2585,
              "nodeType": "Block",
              "src": "1289:100:4",
              "statements": [
                {
                  "assignments": [
                    2573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2573,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2585,
                      "src": "1300:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2572,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1300:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2580,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2577,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3902,
                            "src": "1337:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityLock_$2618",
                              "typeString": "contract LiquidityLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityLock_$2618",
                              "typeString": "contract LiquidityLock"
                            }
                          ],
                          "id": 2576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1329:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1329:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2574,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2543,
                        "src": "1315:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3802,
                      "src": "1315:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1315:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1300:43:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2581,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2573,
                      "src": "1361:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2582,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2539,
                      "src": "1372:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1361:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2571,
                  "id": 2584,
                  "nodeType": "Return",
                  "src": "1354:27:4"
                }
              ]
            },
            "documentation": "Determine if the liquidity contract is sufficienty liquid\r\n@return bool true if the contract's Dai balance is greater than \r\n        liquidity requirement defined at construction, and false otherwise\r",
            "id": 2586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquid",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1259:2:4"
            },
            "returnParameters": {
              "id": 2571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2570,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2586,
                  "src": "1283:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2569,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1282:6:4"
            },
            "scope": 2618,
            "src": "1244:145:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2616,
              "nodeType": "Block",
              "src": "1531:176:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2593,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2591,
                      "src": "1542:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2597,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3902,
                              "src": "1574:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityLock_$2618",
                                "typeString": "contract LiquidityLock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiquidityLock_$2618",
                                "typeString": "contract LiquidityLock"
                              }
                            ],
                            "id": 2596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1566:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1566:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2594,
                          "name": "dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2543,
                          "src": "1552:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3857",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3802,
                        "src": "1552:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1552:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1542:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2601,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:38:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2603,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2591,
                          "src": "1599:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1609:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1599:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2044616920696e204c697175696469747920436f6e747261637420746f20576974686472617721",
                        "id": 2606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1612:43:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d414dccdb37eba8b091fcfb4105a924c759e7109ddfdacd81d854965fca75dd",
                          "typeString": "literal_string \"No Dai in Liquidity Contract to Withdraw!\""
                        },
                        "value": "No Dai in Liquidity Contract to Withdraw!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d414dccdb37eba8b091fcfb4105a924c759e7109ddfdacd81d854965fca75dd",
                          "typeString": "literal_string \"No Dai in Liquidity Contract to Withdraw!\""
                        }
                      ],
                      "id": 2602,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3875,
                        3876
                      ],
                      "referencedDeclaration": 3876,
                      "src": "1591:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:65:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2608,
                  "nodeType": "ExpressionStatement",
                  "src": "1591:65:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2612,
                        "name": "secretary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2541,
                        "src": "1680:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2613,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2591,
                        "src": "1691:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2609,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2543,
                        "src": "1667:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3811,
                      "src": "1667:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1667:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2615,
                  "nodeType": "ExpressionStatement",
                  "src": "1667:32:4"
                }
              ]
            },
            "documentation": "Withdraw the current balance to the Secretary\r",
            "id": 2617,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2589,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2588,
                  "name": "onlyPrimary",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3329,
                  "src": "1496:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1496:11:4"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1486:2:4"
            },
            "returnParameters": {
              "id": 2592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2591,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2617,
                  "src": "1517:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2590,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1516:14:4"
            },
            "scope": 2618,
            "src": "1469:238:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2619,
        "src": "414:1296:4"
      }
    ],
    "src": "0:1710:4"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Coda/Desktop/The Smart Contract/TandaPay-Contracts/contracts/LiquidityLock.sol",
    "exportedSymbols": {
      "LiquidityLock": [
        2618
      ]
    },
    "id": 2619,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2529,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Secondary.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Secondary.sol",
        "id": 2530,
        "nodeType": "ImportDirective",
        "scope": 2619,
        "sourceUnit": 3364,
        "src": "37:65:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 2531,
        "nodeType": "ImportDirective",
        "scope": 2619,
        "sourceUnit": 3858,
        "src": "104:64:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 2532,
        "nodeType": "ImportDirective",
        "scope": 2619,
        "sourceUnit": 3297,
        "src": "170:59:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2533,
              "name": "Secondary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3363,
              "src": "440:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Secondary_$3363",
                "typeString": "contract Secondary"
              }
            },
            "id": 2534,
            "nodeType": "InheritanceSpecifier",
            "src": "440:9:4"
          }
        ],
        "contractDependencies": [
          3363
        ],
        "contractKind": "contract",
        "documentation": "@author blOX Consulting LLC\r\nDate: 08.26.2019\r\nLiquidity Contract for Secretary to post stake into \r\nAdministrator remittance should always pay out secretary\r",
        "fullyImplemented": true,
        "id": 2618,
        "linearizedBaseContracts": [
          2618,
          3363
        ],
        "name": "LiquidityLock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2537,
            "libraryName": {
              "contractScope": null,
              "id": 2535,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3296,
              "src": "465:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3296",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "459:24:4",
            "typeName": {
              "id": 2536,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "478:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2539,
            "name": "liquidity",
            "nodeType": "VariableDeclaration",
            "scope": 2618,
            "src": "491:14:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2538,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "491:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2541,
            "name": "secretary",
            "nodeType": "VariableDeclaration",
            "scope": 2618,
            "src": "512:17:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2540,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "512:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2543,
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 2618,
            "src": "538:10:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3857",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2542,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3857,
              "src": "538:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3857",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2566,
              "nodeType": "Block",
              "src": "893:103:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2552,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2539,
                      "src": "904:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2553,
                      "name": "_liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2545,
                      "src": "916:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "904:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2555,
                  "nodeType": "ExpressionStatement",
                  "src": "904:22:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2556,
                      "name": "secretary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2541,
                      "src": "937:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2557,
                      "name": "_secretary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2547,
                      "src": "949:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "937:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2559,
                  "nodeType": "ExpressionStatement",
                  "src": "937:22:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2560,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2543,
                      "src": "970:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3857",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2562,
                          "name": "_dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2549,
                          "src": "983:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2561,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3857,
                        "src": "976:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$3857_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "976:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3857",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "970:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3857",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2565,
                  "nodeType": "ExpressionStatement",
                  "src": "970:18:4"
                }
              ]
            },
            "documentation": "Construct a new Liquidity Contract\r\n@param _liquidity the minimum required liquidity to satisfy the contract\r\n@param _secretary the beneficiary address of the timelock\r\n@param _dai the address of the Dai ERC20 contract\r",
            "id": 2567,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2545,
                  "name": "_liquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 2567,
                  "src": "835:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2544,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2547,
                  "name": "_secretary",
                  "nodeType": "VariableDeclaration",
                  "scope": 2567,
                  "src": "852:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2549,
                  "name": "_dai",
                  "nodeType": "VariableDeclaration",
                  "scope": 2567,
                  "src": "872:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "834:51:4"
            },
            "returnParameters": {
              "id": 2551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "893:0:4"
            },
            "scope": 2618,
            "src": "823:173:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2585,
              "nodeType": "Block",
              "src": "1289:100:4",
              "statements": [
                {
                  "assignments": [
                    2573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2573,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2585,
                      "src": "1300:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2572,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1300:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2580,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2577,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3902,
                            "src": "1337:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityLock_$2618",
                              "typeString": "contract LiquidityLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityLock_$2618",
                              "typeString": "contract LiquidityLock"
                            }
                          ],
                          "id": 2576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1329:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1329:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2574,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2543,
                        "src": "1315:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3802,
                      "src": "1315:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1315:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1300:43:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2581,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2573,
                      "src": "1361:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2582,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2539,
                      "src": "1372:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1361:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2571,
                  "id": 2584,
                  "nodeType": "Return",
                  "src": "1354:27:4"
                }
              ]
            },
            "documentation": "Determine if the liquidity contract is sufficienty liquid\r\n@return bool true if the contract's Dai balance is greater than \r\n        liquidity requirement defined at construction, and false otherwise\r",
            "id": 2586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquid",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1259:2:4"
            },
            "returnParameters": {
              "id": 2571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2570,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2586,
                  "src": "1283:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2569,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1282:6:4"
            },
            "scope": 2618,
            "src": "1244:145:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2616,
              "nodeType": "Block",
              "src": "1531:176:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2593,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2591,
                      "src": "1542:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2597,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3902,
                              "src": "1574:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityLock_$2618",
                                "typeString": "contract LiquidityLock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiquidityLock_$2618",
                                "typeString": "contract LiquidityLock"
                              }
                            ],
                            "id": 2596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1566:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1566:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2594,
                          "name": "dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2543,
                          "src": "1552:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3857",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3802,
                        "src": "1552:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1552:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1542:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2601,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:38:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2603,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2591,
                          "src": "1599:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1609:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1599:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2044616920696e204c697175696469747920436f6e747261637420746f20576974686472617721",
                        "id": 2606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1612:43:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d414dccdb37eba8b091fcfb4105a924c759e7109ddfdacd81d854965fca75dd",
                          "typeString": "literal_string \"No Dai in Liquidity Contract to Withdraw!\""
                        },
                        "value": "No Dai in Liquidity Contract to Withdraw!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d414dccdb37eba8b091fcfb4105a924c759e7109ddfdacd81d854965fca75dd",
                          "typeString": "literal_string \"No Dai in Liquidity Contract to Withdraw!\""
                        }
                      ],
                      "id": 2602,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3875,
                        3876
                      ],
                      "referencedDeclaration": 3876,
                      "src": "1591:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:65:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2608,
                  "nodeType": "ExpressionStatement",
                  "src": "1591:65:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2612,
                        "name": "secretary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2541,
                        "src": "1680:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2613,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2591,
                        "src": "1691:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2609,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2543,
                        "src": "1667:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3811,
                      "src": "1667:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1667:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2615,
                  "nodeType": "ExpressionStatement",
                  "src": "1667:32:4"
                }
              ]
            },
            "documentation": "Withdraw the current balance to the Secretary\r",
            "id": 2617,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2589,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2588,
                  "name": "onlyPrimary",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3329,
                  "src": "1496:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1496:11:4"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1486:2:4"
            },
            "returnParameters": {
              "id": 2592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2591,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2617,
                  "src": "1517:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2590,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1516:14:4"
            },
            "scope": 2618,
            "src": "1469:238:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2619,
        "src": "414:1296:4"
      }
    ],
    "src": "0:1710:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-29T21:50:32.978Z",
  "devdoc": {
    "author": "blOX Consulting LLC\r Date: 08.26.2019\r Liquidity Contract for Secretary to post stake into \r Administrator remittance should always pay out secretary\r",
    "methods": {
      "constructor": {
        "params": {
          "_dai": "the address of the Dai ERC20 contract\r",
          "_liquidity": "the minimum required liquidity to satisfy the contract\r",
          "_secretary": "the beneficiary address of the timelock\r"
        }
      },
      "liquid()": {
        "return": "bool true if the contract's Dai balance is greater than \r        liquidity requirement defined at construction, and false otherwise\r"
      },
      "primary()": {
        "return": "the address of the primary."
      },
      "transferPrimary(address)": {
        "details": "Transfers contract to a new primary.",
        "params": {
          "recipient": "The address of new primary."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "constructor": "Construct a new Liquidity Contract\r",
      "liquid()": {
        "notice": "Determine if the liquidity contract is sufficienty liquid\r"
      },
      "withdraw()": {
        "notice": "Withdraw the current balance to the Secretary\r"
      }
    }
  }
}