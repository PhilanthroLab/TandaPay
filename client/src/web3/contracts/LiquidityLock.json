{
  "contractName": "LiquidityLock",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferPrimary",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "primary",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_liquidity",
          "type": "uint256"
        },
        {
          "name": "_secretary",
          "type": "address"
        },
        {
          "name": "_dai",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimaryTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "liquid",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferPrimary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"liquid\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"primary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_liquidity\",\"type\":\"uint256\"},{\"name\":\"_secretary\",\"type\":\"address\"},{\"name\":\"_dai\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimaryTransferred\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"blOX Consulting LLC Date: 08.26.2019 Liquidity Contract for Secretary to post stake into  Administrator remittance should always pay out secretary\",\"methods\":{\"constructor\":{\"params\":{\"_dai\":\"the address of the Dai ERC20 contract\",\"_liquidity\":\"the minimum required liquidity to satisfy the contract\",\"_secretary\":\"the beneficiary address of the timelock\"}},\"liquid()\":{\"return\":\"bool true if the contract's Dai balance is greater than         liquidity requirement defined at construction, and false otherwise\"},\"primary()\":{\"return\":\"the address of the primary.\"},\"transferPrimary(address)\":{\"details\":\"Transfers contract to a new primary.\",\"params\":{\"recipient\":\"The address of new primary.\"}}}},\"userdoc\":{\"methods\":{\"constructor\":\"Construct a new Liquidity Contract\",\"liquid()\":{\"notice\":\"Determine if the liquidity contract is sufficienty liquid\"},\"withdraw()\":{\"notice\":\"Withdraw the current balance to the Secretary\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Coda/Desktop/The Smart Contract/TandaPay-Contracts/contracts/LiquidityLock.sol\":\"LiquidityLock\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Coda/Desktop/The Smart Contract/TandaPay-Contracts/contracts/LiquidityLock.sol\":{\"keccak256\":\"0x413c0abbf6b766b7693d446c8d517c13416e0cb8ea2722914e900b587b963bdd\",\"urls\":[\"bzzr://6b9137f3581dd9bd739a8a9b16a9953eaed2858e1f90a88939ab05e38859d2bf\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/ownership/Secondary.sol\":{\"keccak256\":\"0xa5f5ed53adb91ab6a16bee78b255b4b8ed59945bd5c9a7b360d8a62fc63b8da0\",\"urls\":[\"bzzr://2dd07a98e47fe608668d8d3a6591b27e5bd884cdf2f2e6dbd8e571f3a43ea8e3\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405160608061056e8339810180604052606081101561003057600080fd5b508051602080830151604093840151600080546001600160a01b03191633179081905585516001600160a01b0391909116815294519394919390927f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d9928290030190a1600192909255600280546001600160a01b039283166001600160a01b0319918216179091556003805492909316911617905561049a806100d46000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632348238c146100515780633ccfd60b14610079578063a68fee8714610093578063c6dbdf61146100af575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b03166100d3565b005b6100816101c1565b60408051918252519081900360200190f35b61009b610356565b604080519115158252519081900360200190f35b6100b76103e0565b604080516001600160a01b039092168252519081900360200190f35b6000546001600160a01b0316331461011f57604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610443602c913960400191505060405180910390fd5b6001600160a01b03811661016757604051600160e51b62461bcd02815260040180806020018281038252602a815260200180610419602a913960400191505060405180910390fd5b600080546001600160a01b0319166001600160a01b03838116919091179182905560408051929091168252517f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d9916020908290030190a150565b600080546001600160a01b0316331461020e57604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610443602c913960400191505060405180910390fd5b60035460408051600160e01b6370a0823102815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561025c57600080fd5b505afa158015610270573d6000803e3d6000fd5b505050506040513d602081101561028657600080fd5b50519050806102c957604051600160e51b62461bcd0281526004018080602001828103825260298152602001806103f06029913960400191505060405180910390fd5b60035460025460408051600160e01b63a9059cbb0281526001600160a01b039283166004820152602481018590529051919092169163a9059cbb9160448083019260209291908290030181600087803b15801561032557600080fd5b505af1158015610339573d6000803e3d6000fd5b505050506040513d602081101561034f57600080fd5b5090919050565b60035460408051600160e01b6370a08231028152306004820152905160009283926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b1580156103a957600080fd5b505afa1580156103bd573d6000803e3d6000fd5b505050506040513d60208110156103d357600080fd5b5051600154111591505090565b6000546001600160a01b03169056fe4e6f2044616920696e204c697175696469747920436f6e747261637420746f205769746864726177215365636f6e646172793a206e6577207072696d61727920697320746865207a65726f20616464726573735365636f6e646172793a2063616c6c6572206973206e6f7420746865207072696d617279206163636f756e74a165627a7a72305820d051eb438d4b394a4b37a8d47fbab06eb69b743d0057ae472aa9e98f0c63fd3b0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80632348238c146100515780633ccfd60b14610079578063a68fee8714610093578063c6dbdf61146100af575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b03166100d3565b005b6100816101c1565b60408051918252519081900360200190f35b61009b610356565b604080519115158252519081900360200190f35b6100b76103e0565b604080516001600160a01b039092168252519081900360200190f35b6000546001600160a01b0316331461011f57604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610443602c913960400191505060405180910390fd5b6001600160a01b03811661016757604051600160e51b62461bcd02815260040180806020018281038252602a815260200180610419602a913960400191505060405180910390fd5b600080546001600160a01b0319166001600160a01b03838116919091179182905560408051929091168252517f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d9916020908290030190a150565b600080546001600160a01b0316331461020e57604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610443602c913960400191505060405180910390fd5b60035460408051600160e01b6370a0823102815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561025c57600080fd5b505afa158015610270573d6000803e3d6000fd5b505050506040513d602081101561028657600080fd5b50519050806102c957604051600160e51b62461bcd0281526004018080602001828103825260298152602001806103f06029913960400191505060405180910390fd5b60035460025460408051600160e01b63a9059cbb0281526001600160a01b039283166004820152602481018590529051919092169163a9059cbb9160448083019260209291908290030181600087803b15801561032557600080fd5b505af1158015610339573d6000803e3d6000fd5b505050506040513d602081101561034f57600080fd5b5090919050565b60035460408051600160e01b6370a08231028152306004820152905160009283926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b1580156103a957600080fd5b505afa1580156103bd573d6000803e3d6000fd5b505050506040513d60208110156103d357600080fd5b5051600154111591505090565b6000546001600160a01b03169056fe4e6f2044616920696e204c697175696469747920436f6e747261637420746f205769746864726177215365636f6e646172793a206e6577207072696d61727920697320746865207a65726f20616464726573735365636f6e646172793a2063616c6c6572206973206e6f7420746865207072696d617279206163636f756e74a165627a7a72305820d051eb438d4b394a4b37a8d47fbab06eb69b743d0057ae472aa9e98f0c63fd3b0029",
  "sourceMap": "402:1257:5:-;;;796:169;8:9:-1;5:2;;;30:1;27;20:12;5:2;796:169:5;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;796:169:5;;;;;;;;;;;;459:8:11;:21;;-1:-1:-1;;;;;;459:21:11;470:10;459:21;;;;;495:28;;-1:-1:-1;;;;;514:8:11;;;495:28;;;;796:169:5;;;;;;495:28:11;;;;;;;;876:9:5;:22;;;;908:9;:22;;-1:-1:-1;;;;;908:22:5;;;-1:-1:-1;;;;;;908:22:5;;;;;;;940:3;:18;;;;;;;;;;;-1:-1:-1;;402:1257:5;-1:-1:-1;402:1257:5;;",
  "deployedSourceMap": "402:1257:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;402:1257:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:231:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1022:231:11;-1:-1:-1;;;;;1022:231:11;;:::i;:::-;;1423:234:5;;;:::i;:::-;;;;;;;;;;;;;;;;1206:142;;;:::i;:::-;;;;;;;;;;;;;;;;;;818:81:11;;;:::i;:::-;;;;-1:-1:-1;;;;;818:81:11;;;;;;;;;;;;;;1022:231;678:8;;-1:-1:-1;;;;;678:8:11;664:10;:22;656:79;;;;-1:-1:-1;;;;;656:79:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1103:23:11;;1095:78;;;;-1:-1:-1;;;;;1095:78:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1183:8;:20;;-1:-1:-1;;;;;;1183:20:11;-1:-1:-1;;;;;1183:20:11;;;;;;;;;;;1218:28;;;1237:8;;;;1218:28;;;;;;;;;;;;;1022:231;:::o;1423:234:5:-;1471:12;678:8:11;;-1:-1:-1;;;;;678:8:11;664:10;:22;656:79;;;;-1:-1:-1;;;;;656:79:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1505:3:5;;:28;;;-1:-1:-1;;;;;1505:28:5;;1527:4;1505:28;;;;;;-1:-1:-1;;;;;1505:3:5;;;;-1:-1:-1;;1505:28:5;;;;;;;;;;;;;;;:3;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;1505:28:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1505:28:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1505:28:5;;-1:-1:-1;1551:11:5;1543:65;;;;-1:-1:-1;;;;;1543:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1618:3;;1631:9;;1618:32;;;-1:-1:-1;;;;;1618:32:5;;-1:-1:-1;;;;;1631:9:5;;;1618:32;;;;;;;;;;;;:3;;;;;-1:-1:-1;;1618:32:5;;;;;;;;;;;;;;-1:-1:-1;1618:3:5;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;1618:32:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1618:32:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1423:234:5;;;-1:-1:-1;1423:234:5:o;1206:142::-;1276:3;;:28;;;-1:-1:-1;;;;;1276:28:5;;1298:4;1276:28;;;;;;-1:-1:-1;;;;;;;;;1276:3:5;;;;-1:-1:-1;;1276:28:5;;;;;;;;;;;;;;;:3;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;1276:28:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1276:28:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1276:28:5;1332:9;;-1:-1:-1;1321:20:5;;-1:-1:-1;;1206:142:5;:::o;818:81:11:-;858:7;884:8;-1:-1:-1;;;;;884:8:11;;818:81::o",
  "source": "pragma solidity >= 0.4.0 < 0.7.0;\n\nimport 'openzeppelin-solidity/contracts/ownership/Secondary.sol';\nimport 'openzeppelin-solidity/contracts/token/ERC20/IERC20.sol';\nimport 'openzeppelin-solidity/contracts/math/SafeMath.sol';\n\n/**\n * @author blOX Consulting LLC\n * Date: 08.26.2019\n * Liquidity Contract for Secretary to post stake into \n * Administrator remittance should always pay out secretary\n */\ncontract LiquidityLock is Secondary {\n\n    using SafeMath for uint;\n\n    uint liquidity;\n    address secretary;\n\n    IERC20 dai;\n\n    /**\n     * Construct a new Liquidity Contract\n     * @param _liquidity the minimum required liquidity to satisfy the contract\n     * @param _secretary the beneficiary address of the timelock\n     * @param _dai the address of the Dai ERC20 contract\n     */\n    constructor(uint _liquidity, address _secretary, address _dai) public {\n        liquidity = _liquidity;\n        secretary = _secretary;\n        dai = IERC20(_dai);\n    }\n\n    /**\n     * Determine if the liquidity contract is sufficienty liquid\n     * @return bool true if the contract's Dai balance is greater than \n     *         liquidity requirement defined at construction, and false otherwise\n     */\n    function liquid() public view returns (bool) {\n        uint balance = dai.balanceOf(address(this));\n        return balance >= liquidity;\n    }\n\n    /**\n     * Withdraw the current balance to the Secretary\n     */\n    function withdraw() public onlyPrimary returns (uint balance) {\n        balance = dai.balanceOf(address(this));\n        require(balance > 0, \"No Dai in Liquidity Contract to Withdraw!\");\n        dai.transfer(secretary, balance);\n    }\n}",
  "sourcePath": "C:\\Users\\Coda\\Desktop\\The Smart Contract\\TandaPay-Contracts\\contracts\\LiquidityLock.sol",
  "ast": {
    "absolutePath": "/C/Users/Coda/Desktop/The Smart Contract/TandaPay-Contracts/contracts/LiquidityLock.sol",
    "exportedSymbols": {
      "LiquidityLock": [
        3819
      ]
    },
    "id": 3820,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3730,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:5"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Secondary.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Secondary.sol",
        "id": 3731,
        "nodeType": "ImportDirective",
        "scope": 3820,
        "sourceUnit": 4605,
        "src": "35:65:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 3732,
        "nodeType": "ImportDirective",
        "scope": 3820,
        "sourceUnit": 5099,
        "src": "101:64:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 3733,
        "nodeType": "ImportDirective",
        "scope": 3820,
        "sourceUnit": 4538,
        "src": "166:59:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3734,
              "name": "Secondary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4604,
              "src": "428:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Secondary_$4604",
                "typeString": "contract Secondary"
              }
            },
            "id": 3735,
            "nodeType": "InheritanceSpecifier",
            "src": "428:9:5"
          }
        ],
        "contractDependencies": [
          4604
        ],
        "contractKind": "contract",
        "documentation": "@author blOX Consulting LLC\nDate: 08.26.2019\nLiquidity Contract for Secretary to post stake into \nAdministrator remittance should always pay out secretary",
        "fullyImplemented": true,
        "id": 3819,
        "linearizedBaseContracts": [
          3819,
          4604
        ],
        "name": "LiquidityLock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3738,
            "libraryName": {
              "contractScope": null,
              "id": 3736,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4537,
              "src": "451:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4537",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "445:24:5",
            "typeName": {
              "id": 3737,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "464:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3740,
            "name": "liquidity",
            "nodeType": "VariableDeclaration",
            "scope": 3819,
            "src": "475:14:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3739,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "475:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3742,
            "name": "secretary",
            "nodeType": "VariableDeclaration",
            "scope": 3819,
            "src": "495:17:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3741,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "495:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3744,
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 3819,
            "src": "519:10:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5098",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 3743,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5098,
              "src": "519:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5098",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3767,
              "nodeType": "Block",
              "src": "866:99:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3753,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3740,
                      "src": "876:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3754,
                      "name": "_liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3746,
                      "src": "888:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "876:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3756,
                  "nodeType": "ExpressionStatement",
                  "src": "876:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3757,
                      "name": "secretary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3742,
                      "src": "908:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3758,
                      "name": "_secretary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3748,
                      "src": "920:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "908:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3760,
                  "nodeType": "ExpressionStatement",
                  "src": "908:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3761,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3744,
                      "src": "940:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5098",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3763,
                          "name": "_dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3750,
                          "src": "953:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3762,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5098,
                        "src": "946:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$5098_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 3764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "946:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5098",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "940:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5098",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 3766,
                  "nodeType": "ExpressionStatement",
                  "src": "940:18:5"
                }
              ]
            },
            "documentation": "Construct a new Liquidity Contract\n@param _liquidity the minimum required liquidity to satisfy the contract\n@param _secretary the beneficiary address of the timelock\n@param _dai the address of the Dai ERC20 contract",
            "id": 3768,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3746,
                  "name": "_liquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 3768,
                  "src": "808:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3745,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3748,
                  "name": "_secretary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3768,
                  "src": "825:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3750,
                  "name": "_dai",
                  "nodeType": "VariableDeclaration",
                  "scope": 3768,
                  "src": "845:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "807:51:5"
            },
            "returnParameters": {
              "id": 3752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "866:0:5"
            },
            "scope": 3819,
            "src": "796:169:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3786,
              "nodeType": "Block",
              "src": "1251:97:5",
              "statements": [
                {
                  "assignments": [
                    3774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3774,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 3786,
                      "src": "1261:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3773,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1261:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3781,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3778,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5165,
                            "src": "1298:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityLock_$3819",
                              "typeString": "contract LiquidityLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityLock_$3819",
                              "typeString": "contract LiquidityLock"
                            }
                          ],
                          "id": 3777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1290:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1290:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3775,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3744,
                        "src": "1276:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5098",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5043,
                      "src": "1276:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1276:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1261:43:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3782,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3774,
                      "src": "1321:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3783,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3740,
                      "src": "1332:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1321:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3772,
                  "id": 3785,
                  "nodeType": "Return",
                  "src": "1314:27:5"
                }
              ]
            },
            "documentation": "Determine if the liquidity contract is sufficienty liquid\n@return bool true if the contract's Dai balance is greater than \n        liquidity requirement defined at construction, and false otherwise",
            "id": 3787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquid",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1221:2:5"
            },
            "returnParameters": {
              "id": 3772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3771,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3787,
                  "src": "1245:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3770,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1244:6:5"
            },
            "scope": 3819,
            "src": "1206:142:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3817,
              "nodeType": "Block",
              "src": "1485:172:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3794,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3792,
                      "src": "1495:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3798,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5165,
                              "src": "1527:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityLock_$3819",
                                "typeString": "contract LiquidityLock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiquidityLock_$3819",
                                "typeString": "contract LiquidityLock"
                              }
                            ],
                            "id": 3797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1519:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1519:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3795,
                          "name": "dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3744,
                          "src": "1505:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$5098",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 3796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5043,
                        "src": "1505:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 3800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1505:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1495:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3802,
                  "nodeType": "ExpressionStatement",
                  "src": "1495:38:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3804,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3792,
                          "src": "1551:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1561:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1551:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2044616920696e204c697175696469747920436f6e747261637420746f20576974686472617721",
                        "id": 3807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1564:43:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d414dccdb37eba8b091fcfb4105a924c759e7109ddfdacd81d854965fca75dd",
                          "typeString": "literal_string \"No Dai in Liquidity Contract to Withdraw!\""
                        },
                        "value": "No Dai in Liquidity Contract to Withdraw!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d414dccdb37eba8b091fcfb4105a924c759e7109ddfdacd81d854965fca75dd",
                          "typeString": "literal_string \"No Dai in Liquidity Contract to Withdraw!\""
                        }
                      ],
                      "id": 3803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5116,
                        5117
                      ],
                      "referencedDeclaration": 5117,
                      "src": "1543:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1543:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3809,
                  "nodeType": "ExpressionStatement",
                  "src": "1543:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3813,
                        "name": "secretary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3742,
                        "src": "1631:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3814,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3792,
                        "src": "1642:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3810,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3744,
                        "src": "1618:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5098",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5052,
                      "src": "1618:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1618:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3816,
                  "nodeType": "ExpressionStatement",
                  "src": "1618:32:5"
                }
              ]
            },
            "documentation": "Withdraw the current balance to the Secretary",
            "id": 3818,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3790,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3789,
                  "name": "onlyPrimary",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4570,
                  "src": "1450:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1450:11:5"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1440:2:5"
            },
            "returnParameters": {
              "id": 3793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3792,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3818,
                  "src": "1471:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3791,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1470:14:5"
            },
            "scope": 3819,
            "src": "1423:234:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3820,
        "src": "402:1257:5"
      }
    ],
    "src": "0:1659:5"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Coda/Desktop/The Smart Contract/TandaPay-Contracts/contracts/LiquidityLock.sol",
    "exportedSymbols": {
      "LiquidityLock": [
        3819
      ]
    },
    "id": 3820,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3730,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:5"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Secondary.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Secondary.sol",
        "id": 3731,
        "nodeType": "ImportDirective",
        "scope": 3820,
        "sourceUnit": 4605,
        "src": "35:65:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 3732,
        "nodeType": "ImportDirective",
        "scope": 3820,
        "sourceUnit": 5099,
        "src": "101:64:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 3733,
        "nodeType": "ImportDirective",
        "scope": 3820,
        "sourceUnit": 4538,
        "src": "166:59:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3734,
              "name": "Secondary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4604,
              "src": "428:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Secondary_$4604",
                "typeString": "contract Secondary"
              }
            },
            "id": 3735,
            "nodeType": "InheritanceSpecifier",
            "src": "428:9:5"
          }
        ],
        "contractDependencies": [
          4604
        ],
        "contractKind": "contract",
        "documentation": "@author blOX Consulting LLC\nDate: 08.26.2019\nLiquidity Contract for Secretary to post stake into \nAdministrator remittance should always pay out secretary",
        "fullyImplemented": true,
        "id": 3819,
        "linearizedBaseContracts": [
          3819,
          4604
        ],
        "name": "LiquidityLock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3738,
            "libraryName": {
              "contractScope": null,
              "id": 3736,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4537,
              "src": "451:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4537",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "445:24:5",
            "typeName": {
              "id": 3737,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "464:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3740,
            "name": "liquidity",
            "nodeType": "VariableDeclaration",
            "scope": 3819,
            "src": "475:14:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3739,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "475:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3742,
            "name": "secretary",
            "nodeType": "VariableDeclaration",
            "scope": 3819,
            "src": "495:17:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3741,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "495:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3744,
            "name": "dai",
            "nodeType": "VariableDeclaration",
            "scope": 3819,
            "src": "519:10:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5098",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 3743,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5098,
              "src": "519:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5098",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3767,
              "nodeType": "Block",
              "src": "866:99:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3753,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3740,
                      "src": "876:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3754,
                      "name": "_liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3746,
                      "src": "888:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "876:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3756,
                  "nodeType": "ExpressionStatement",
                  "src": "876:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3757,
                      "name": "secretary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3742,
                      "src": "908:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3758,
                      "name": "_secretary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3748,
                      "src": "920:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "908:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3760,
                  "nodeType": "ExpressionStatement",
                  "src": "908:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3761,
                      "name": "dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3744,
                      "src": "940:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5098",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3763,
                          "name": "_dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3750,
                          "src": "953:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3762,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5098,
                        "src": "946:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$5098_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 3764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "946:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5098",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "940:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5098",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 3766,
                  "nodeType": "ExpressionStatement",
                  "src": "940:18:5"
                }
              ]
            },
            "documentation": "Construct a new Liquidity Contract\n@param _liquidity the minimum required liquidity to satisfy the contract\n@param _secretary the beneficiary address of the timelock\n@param _dai the address of the Dai ERC20 contract",
            "id": 3768,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3746,
                  "name": "_liquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 3768,
                  "src": "808:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3745,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3748,
                  "name": "_secretary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3768,
                  "src": "825:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3750,
                  "name": "_dai",
                  "nodeType": "VariableDeclaration",
                  "scope": 3768,
                  "src": "845:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "807:51:5"
            },
            "returnParameters": {
              "id": 3752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "866:0:5"
            },
            "scope": 3819,
            "src": "796:169:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3786,
              "nodeType": "Block",
              "src": "1251:97:5",
              "statements": [
                {
                  "assignments": [
                    3774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3774,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 3786,
                      "src": "1261:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3773,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1261:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3781,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3778,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5165,
                            "src": "1298:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityLock_$3819",
                              "typeString": "contract LiquidityLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityLock_$3819",
                              "typeString": "contract LiquidityLock"
                            }
                          ],
                          "id": 3777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1290:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1290:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3775,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3744,
                        "src": "1276:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5098",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5043,
                      "src": "1276:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1276:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1261:43:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3782,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3774,
                      "src": "1321:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3783,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3740,
                      "src": "1332:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1321:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3772,
                  "id": 3785,
                  "nodeType": "Return",
                  "src": "1314:27:5"
                }
              ]
            },
            "documentation": "Determine if the liquidity contract is sufficienty liquid\n@return bool true if the contract's Dai balance is greater than \n        liquidity requirement defined at construction, and false otherwise",
            "id": 3787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquid",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1221:2:5"
            },
            "returnParameters": {
              "id": 3772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3771,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3787,
                  "src": "1245:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3770,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1244:6:5"
            },
            "scope": 3819,
            "src": "1206:142:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3817,
              "nodeType": "Block",
              "src": "1485:172:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3794,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3792,
                      "src": "1495:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3798,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5165,
                              "src": "1527:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityLock_$3819",
                                "typeString": "contract LiquidityLock"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiquidityLock_$3819",
                                "typeString": "contract LiquidityLock"
                              }
                            ],
                            "id": 3797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1519:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 3799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1519:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3795,
                          "name": "dai",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3744,
                          "src": "1505:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$5098",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 3796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5043,
                        "src": "1505:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 3800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1505:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1495:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3802,
                  "nodeType": "ExpressionStatement",
                  "src": "1495:38:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3804,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3792,
                          "src": "1551:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1561:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1551:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2044616920696e204c697175696469747920436f6e747261637420746f20576974686472617721",
                        "id": 3807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1564:43:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d414dccdb37eba8b091fcfb4105a924c759e7109ddfdacd81d854965fca75dd",
                          "typeString": "literal_string \"No Dai in Liquidity Contract to Withdraw!\""
                        },
                        "value": "No Dai in Liquidity Contract to Withdraw!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d414dccdb37eba8b091fcfb4105a924c759e7109ddfdacd81d854965fca75dd",
                          "typeString": "literal_string \"No Dai in Liquidity Contract to Withdraw!\""
                        }
                      ],
                      "id": 3803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5116,
                        5117
                      ],
                      "referencedDeclaration": 5117,
                      "src": "1543:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1543:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3809,
                  "nodeType": "ExpressionStatement",
                  "src": "1543:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3813,
                        "name": "secretary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3742,
                        "src": "1631:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3814,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3792,
                        "src": "1642:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3810,
                        "name": "dai",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3744,
                        "src": "1618:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5098",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5052,
                      "src": "1618:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1618:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3816,
                  "nodeType": "ExpressionStatement",
                  "src": "1618:32:5"
                }
              ]
            },
            "documentation": "Withdraw the current balance to the Secretary",
            "id": 3818,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3790,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3789,
                  "name": "onlyPrimary",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4570,
                  "src": "1450:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1450:11:5"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1440:2:5"
            },
            "returnParameters": {
              "id": 3793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3792,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3818,
                  "src": "1471:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3791,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1470:14:5"
            },
            "scope": 3819,
            "src": "1423:234:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3820,
        "src": "402:1257:5"
      }
    ],
    "src": "0:1659:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-11-26T11:29:38.466Z",
  "devdoc": {
    "author": "blOX Consulting LLC Date: 08.26.2019 Liquidity Contract for Secretary to post stake into  Administrator remittance should always pay out secretary",
    "methods": {
      "constructor": {
        "params": {
          "_dai": "the address of the Dai ERC20 contract",
          "_liquidity": "the minimum required liquidity to satisfy the contract",
          "_secretary": "the beneficiary address of the timelock"
        }
      },
      "liquid()": {
        "return": "bool true if the contract's Dai balance is greater than         liquidity requirement defined at construction, and false otherwise"
      },
      "primary()": {
        "return": "the address of the primary."
      },
      "transferPrimary(address)": {
        "details": "Transfers contract to a new primary.",
        "params": {
          "recipient": "The address of new primary."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "constructor": "Construct a new Liquidity Contract",
      "liquid()": {
        "notice": "Determine if the liquidity contract is sufficienty liquid"
      },
      "withdraw()": {
        "notice": "Withdraw the current balance to the Secretary"
      }
    }
  }
}