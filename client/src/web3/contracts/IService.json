{
  "contractName": "IService",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_approved",
          "type": "address"
        }
      ],
      "name": "AdminApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_revoked",
          "type": "address"
        }
      ],
      "name": "AdminRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_group",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "GroupCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_group",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "Remitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_group",
          "type": "address"
        }
      ],
      "name": "Loaned",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_volume",
          "type": "uint256"
        },
        {
          "name": "_payout",
          "type": "uint256"
        }
      ],
      "name": "createGroup",
      "outputs": [
        {
          "name": "_group",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_group",
          "type": "address"
        }
      ],
      "name": "remitGroup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_group",
          "type": "address"
        },
        {
          "name": "_months",
          "type": "uint256"
        }
      ],
      "name": "loan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_query",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_query",
          "type": "address"
        }
      ],
      "name": "isSecretary",
      "outputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getGroup",
      "outputs": [
        {
          "name": "_group",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getGroupCount",
      "outputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getGroupCount\",\"outputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_group\",\"type\":\"address\"},{\"name\":\"_months\",\"type\":\"uint256\"}],\"name\":\"loan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_query\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_volume\",\"type\":\"uint256\"},{\"name\":\"_payout\",\"type\":\"uint256\"}],\"name\":\"createGroup\",\"outputs\":[{\"name\":\"_group\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_query\",\"type\":\"address\"}],\"name\":\"isSecretary\",\"outputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_group\",\"type\":\"address\"}],\"name\":\"remitGroup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getGroup\",\"outputs\":[{\"name\":\"_group\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_approved\",\"type\":\"address\"}],\"name\":\"AdminApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_revoked\",\"type\":\"address\"}],\"name\":\"AdminRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_group\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"GroupCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_group\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"Remitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_group\",\"type\":\"address\"}],\"name\":\"Loaned\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"blOX Consulting LLC\\r Date: 08.26.2019\\r Interface for Insurance Service/ Group Factory Contract\\r\",\"methods\":{\"addAdmin(address)\":{\"details\":\"modifier onlyAdmin\\r Add an admin\\r\",\"params\":{\"_to\":\"the address being whitelisted\\r*\"}},\"createGroup(address,uint256,uint256)\":{\"details\":\"modifier onlyAdmin\\r Approve a secretary and create a new group\\r\",\"params\":{\"_payout\":\"uint number of Dai paid per claim\\r\",\"_to\":\"the address being given a secretary role\\r\",\"_volume\":\"uint number of expected claims\\r\"},\"return\":\"_group the address of the Group contact\\r*\"},\"getGroup(uint256)\":{\"params\":{\"_index\":\"uint key to return address value in mapping 'groups'\\r\"},\"return\":\"the address stored at the queried index. Returns 0x00 if none\\r\"},\"getGroupCount()\":{\"return\":\"_index uint number of deployed Group child contracts deployed\\r\"},\"isAdmin(address)\":{\"params\":{\"_query\":\"address being queried as Administrator\\r\"},\"return\":\"bool true if the address is an Administrator, and false otherwise\\r\"},\"isSecretary(address)\":{\"params\":{\"_query\":\"address being queried as Secretary\\r\"},\"return\":\"_index uint stored index of Secretary's Group; returns 0 if none\\r\"},\"loan(address,uint256)\":{\"details\":\"modifier onlyAdmin\\rrequire sufficienct balance\\r Extend a loan, in Dai, to a Tanda Group\\r\",\"params\":{\"_group\":\"the group being given the loan\\r\",\"_months\":\"the length, in months (periods), the Group has to repay\\r\"}},\"remitGroup(address)\":{\"details\":\"modifier onlyAdmin\\rmodifier unlocked\\r Remit a single group assuming it is not timelocked\\r\",\"params\":{\"_group\":\"the address of the group being remitted\\r*\"}},\"removeAdmin(address)\":{\"details\":\"modifier onlyAdmin\\r Remove an admin\\r\",\"params\":{\"_from\":\"the address being blacklisted\\r*\"}}}},\"userdoc\":{\"methods\":{\"getGroup(uint256)\":{\"notice\":\"Determine the Group address stored internally at a specific index\\r\"},\"getGroupCount()\":{\"notice\":\"Determine the number of insurance groups deployed by this Service\\r\"},\"isAdmin(address)\":{\"notice\":\"Query an address to determine if it currently holds an Administrator role in the Service\\r\"},\"isSecretary(address)\":{\"notice\":\"Determine if an address is a Secretary by returning the index of their group\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Coda/Desktop/The Smart Contract/TandaPay-Contracts/contracts/IService.sol\":\"IService\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Coda/Desktop/The Smart Contract/TandaPay-Contracts/contracts/IService.sol\":{\"keccak256\":\"0xdc130f3c192db406ce3bb0ec8572ce97571b78318884c22dfd97ddead3cb12ee\",\"urls\":[\"bzzr://8bf2fed63b82a48053ce9a84c59ea7cad804fc8dd325a2248034c54c3acb1b26\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity >= 0.4.0 < 0.7.0;\r\n\r\nimport 'openzeppelin-solidity/contracts/math/SafeMath.sol';\r\nimport 'openzeppelin-solidity/contracts/token/ERC20/IERC20.sol';\r\n\r\n\r\n/**\r\n * @author blOX Consulting LLC\r\n * Date: 08.26.2019\r\n * Interface for Insurance Service/ Group Factory Contract\r\n */\r\ncontract IService {\r\n\r\n    using SafeMath for uint;\r\n\r\n    event AdminApproved(address _approved);\r\n    event AdminRevoked(address _revoked);\r\n    event GroupCreated(address _group, address _to);\r\n    event Remitted(address _group, uint _period);\r\n    event Loaned(address _group);\r\n\r\n    enum subperiod {LOBBY, PRE, ACTIVE, POST, ENDED}\r\n\r\n    mapping(address => bool) administrators;\r\n    mapping(address => uint) secretaries;\r\n    mapping(uint => address) groups;\r\n\r\n    IERC20 Dai;\r\n\r\n    uint groupCount;\r\n\r\n    ///MUTABLE FUNCTIONS///\r\n\r\n    /**\r\n     * @dev modifier onlyAdmin\r\n     * Add an admin\r\n     * @param _to the address being whitelisted\r\n     **/\r\n    function addAdmin(address _to) public;\r\n\r\n    /**\r\n     * @dev modifier onlyAdmin\r\n     * Remove an admin\r\n     * @param _from the address being blacklisted\r\n     **/\r\n    function removeAdmin(address _from) public;\r\n\r\n    /**\r\n     * @dev modifier onlyAdmin\r\n     * Approve a secretary and create a new group\r\n     * @param _to the address being given a secretary role\r\n     * @param _volume uint number of expected claims\r\n     * @param _payout uint number of Dai paid per claim\r\n     * @return _group the address of the Group contact\r\n     **/\r\n    function createGroup(address _to, uint _volume, uint _payout) public returns (address _group);\r\n\r\n    /**\r\n     * @dev modifier onlyAdmin\r\n     * @dev modifier unlocked\r\n     * Remit a single group assuming it is not timelocked\r\n     * @param _group the address of the group being remitted\r\n     **/\r\n    function remitGroup(address _group) public;\r\n\r\n    /**\r\n     * @dev modifier onlyAdmin\r\n     * @dev require sufficienct balance\r\n     * Extend a loan, in Dai, to a Tanda Group\r\n     * @param _group the group being given the loan\r\n     * @param _months the length, in months (periods), the Group has to repay\r\n     */\r\n    function loan(address _group, uint _months) public;\r\n\r\n    ///VIEWABLE FUNCTIONS///\r\n\r\n    /**\r\n     * Query an address to determine if it currently holds an Administrator role in the Service\r\n     * @param _query address being queried as Administrator\r\n     * @return bool true if the address is an Administrator, and false otherwise\r\n     */\r\n    function isAdmin(address _query) public view returns (bool);\r\n\r\n    /**\r\n     * Determine if an address is a Secretary by returning the index of their group\r\n     * @param _query address being queried as Secretary\r\n     * @return _index uint stored index of Secretary's Group; returns 0 if none\r\n     */\r\n    function isSecretary(address _query) public view returns (uint _index);\r\n\r\n    /**\r\n     * Determine the Group address stored internally at a specific index\r\n     * @param _index uint key to return address value in mapping 'groups'\r\n     * @return the address stored at the queried index. Returns 0x00 if none\r\n     */\r\n    function getGroup(uint _index) public view returns (address _group);\r\n\r\n    /**\r\n     * Determine the number of insurance groups deployed by this Service\r\n     * @return _index uint number of deployed Group child contracts deployed\r\n     */\r\n    function getGroupCount() public view returns (uint _index);\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\Coda\\Desktop\\The Smart Contract\\TandaPay-Contracts\\contracts\\IService.sol",
  "ast": {
    "absolutePath": "/C/Users/Coda/Desktop/The Smart Contract/TandaPay-Contracts/contracts/IService.sol",
    "exportedSymbols": {
      "IService": [
        3643
      ]
    },
    "id": 3644,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3532,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 3533,
        "nodeType": "ImportDirective",
        "scope": 3644,
        "sourceUnit": 4412,
        "src": "37:59:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 3534,
        "nodeType": "ImportDirective",
        "scope": 3644,
        "sourceUnit": 4973,
        "src": "98:64:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@author blOX Consulting LLC\r\nDate: 08.26.2019\r\nInterface for Insurance Service/ Group Factory Contract\r",
        "fullyImplemented": false,
        "id": 3643,
        "linearizedBaseContracts": [
          3643
        ],
        "name": "IService",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3537,
            "libraryName": {
              "contractScope": null,
              "id": 3535,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4411,
              "src": "324:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4411",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "318:24:4",
            "typeName": {
              "id": 3536,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "337:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3541,
            "name": "AdminApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3539,
                  "indexed": false,
                  "name": "_approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 3541,
                  "src": "370:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "369:19:4"
            },
            "src": "350:39:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3545,
            "name": "AdminRevoked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3543,
                  "indexed": false,
                  "name": "_revoked",
                  "nodeType": "VariableDeclaration",
                  "scope": 3545,
                  "src": "414:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "413:18:4"
            },
            "src": "395:37:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3551,
            "name": "GroupCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3547,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 3551,
                  "src": "457:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3549,
                  "indexed": false,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3551,
                  "src": "473:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "456:29:4"
            },
            "src": "438:48:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3557,
            "name": "Remitted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3553,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 3557,
                  "src": "507:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3555,
                  "indexed": false,
                  "name": "_period",
                  "nodeType": "VariableDeclaration",
                  "scope": 3557,
                  "src": "523:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3554,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "506:30:4"
            },
            "src": "492:45:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3561,
            "name": "Loaned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3559,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 3561,
                  "src": "556:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "555:16:4"
            },
            "src": "543:29:4"
          },
          {
            "canonicalName": "IService.subperiod",
            "id": 3567,
            "members": [
              {
                "id": 3562,
                "name": "LOBBY",
                "nodeType": "EnumValue",
                "src": "596:5:4"
              },
              {
                "id": 3563,
                "name": "PRE",
                "nodeType": "EnumValue",
                "src": "603:3:4"
              },
              {
                "id": 3564,
                "name": "ACTIVE",
                "nodeType": "EnumValue",
                "src": "608:6:4"
              },
              {
                "id": 3565,
                "name": "POST",
                "nodeType": "EnumValue",
                "src": "616:4:4"
              },
              {
                "id": 3566,
                "name": "ENDED",
                "nodeType": "EnumValue",
                "src": "622:5:4"
              }
            ],
            "name": "subperiod",
            "nodeType": "EnumDefinition",
            "src": "580:48:4"
          },
          {
            "constant": false,
            "id": 3571,
            "name": "administrators",
            "nodeType": "VariableDeclaration",
            "scope": 3643,
            "src": "636:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3570,
              "keyType": {
                "id": 3568,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "644:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "636:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3569,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "655:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3575,
            "name": "secretaries",
            "nodeType": "VariableDeclaration",
            "scope": 3643,
            "src": "682:36:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3574,
              "keyType": {
                "id": 3572,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "690:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "682:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3573,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "701:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3579,
            "name": "groups",
            "nodeType": "VariableDeclaration",
            "scope": 3643,
            "src": "725:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 3578,
              "keyType": {
                "id": 3576,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "733:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "725:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 3577,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "741:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3581,
            "name": "Dai",
            "nodeType": "VariableDeclaration",
            "scope": 3643,
            "src": "765:10:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4972",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 3580,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4972,
              "src": "765:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4972",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3583,
            "name": "groupCount",
            "nodeType": "VariableDeclaration",
            "scope": 3643,
            "src": "784:15:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3582,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "784:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nAdd an admin\r\n@param _to the address being whitelisted\r*",
            "id": 3588,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3585,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3588,
                  "src": "978:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "977:13:4"
            },
            "returnParameters": {
              "id": 3587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:0:4"
            },
            "scope": 3643,
            "src": "960:38:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nRemove an admin\r\n@param _from the address being blacklisted\r*",
            "id": 3593,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3590,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3593,
                  "src": "1153:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1152:15:4"
            },
            "returnParameters": {
              "id": 3592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1174:0:4"
            },
            "scope": 3643,
            "src": "1132:43:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nApprove a secretary and create a new group\r\n@param _to the address being given a secretary role\r\n@param _volume uint number of expected claims\r\n@param _payout uint number of Dai paid per claim\r\n@return _group the address of the Group contact\r*",
            "id": 3604,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createGroup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3595,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3604,
                  "src": "1533:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1533:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3597,
                  "name": "_volume",
                  "nodeType": "VariableDeclaration",
                  "scope": 3604,
                  "src": "1546:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3596,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1546:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3599,
                  "name": "_payout",
                  "nodeType": "VariableDeclaration",
                  "scope": 3604,
                  "src": "1560:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3598,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1560:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1532:41:4"
            },
            "returnParameters": {
              "id": 3603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3602,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 3604,
                  "src": "1590:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1589:16:4"
            },
            "scope": 3643,
            "src": "1512:94:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\n@dev modifier unlocked\r\nRemit a single group assuming it is not timelocked\r\n@param _group the address of the group being remitted\r*",
            "id": 3609,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remitGroup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3606,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 3609,
                  "src": "1837:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1837:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1836:16:4"
            },
            "returnParameters": {
              "id": 3608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1859:0:4"
            },
            "scope": 3643,
            "src": "1817:43:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\n@dev require sufficienct balance\r\nExtend a loan, in Dai, to a Tanda Group\r\n@param _group the group being given the loan\r\n@param _months the length, in months (periods), the Group has to repay\r",
            "id": 3616,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "loan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3611,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 3616,
                  "src": "2153:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2153:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3613,
                  "name": "_months",
                  "nodeType": "VariableDeclaration",
                  "scope": 3616,
                  "src": "2169:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3612,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2169:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2152:30:4"
            },
            "returnParameters": {
              "id": 3615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2189:0:4"
            },
            "scope": 3643,
            "src": "2139:51:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "Query an address to determine if it currently holds an Administrator role in the Service\r\n@param _query address being queried as Administrator\r\n@return bool true if the address is an Administrator, and false otherwise\r",
            "id": 3623,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3618,
                  "name": "_query",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "2505:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2505:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2504:16:4"
            },
            "returnParameters": {
              "id": 3622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3621,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "2542:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3620,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2542:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2541:6:4"
            },
            "scope": 3643,
            "src": "2488:60:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "Determine if an address is a Secretary by returning the index of their group\r\n@param _query address being queried as Secretary\r\n@return _index uint stored index of Secretary's Group; returns 0 if none\r",
            "id": 3630,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isSecretary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3625,
                  "name": "_query",
                  "nodeType": "VariableDeclaration",
                  "scope": 3630,
                  "src": "2818:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2818:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2817:16:4"
            },
            "returnParameters": {
              "id": 3629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3628,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 3630,
                  "src": "2855:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3627,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2855:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2854:13:4"
            },
            "scope": 3643,
            "src": "2797:71:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "Determine the Group address stored internally at a specific index\r\n@param _index uint key to return address value in mapping 'groups'\r\n@return the address stored at the queried index. Returns 0x00 if none\r",
            "id": 3637,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getGroup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3632,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 3637,
                  "src": "3139:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3631,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3139:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3138:13:4"
            },
            "returnParameters": {
              "id": 3636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3635,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 3637,
                  "src": "3173:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3173:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3172:16:4"
            },
            "scope": 3643,
            "src": "3121:68:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "Determine the number of insurance groups deployed by this Service\r\n@return _index uint number of deployed Group child contracts deployed\r",
            "id": 3642,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getGroupCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3389:2:4"
            },
            "returnParameters": {
              "id": 3641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3640,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 3642,
                  "src": "3413:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3639,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3413:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3412:13:4"
            },
            "scope": 3643,
            "src": "3367:59:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3644,
        "src": "291:3140:4"
      }
    ],
    "src": "0:3433:4"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Coda/Desktop/The Smart Contract/TandaPay-Contracts/contracts/IService.sol",
    "exportedSymbols": {
      "IService": [
        3643
      ]
    },
    "id": 3644,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3532,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 3533,
        "nodeType": "ImportDirective",
        "scope": 3644,
        "sourceUnit": 4412,
        "src": "37:59:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 3534,
        "nodeType": "ImportDirective",
        "scope": 3644,
        "sourceUnit": 4973,
        "src": "98:64:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@author blOX Consulting LLC\r\nDate: 08.26.2019\r\nInterface for Insurance Service/ Group Factory Contract\r",
        "fullyImplemented": false,
        "id": 3643,
        "linearizedBaseContracts": [
          3643
        ],
        "name": "IService",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3537,
            "libraryName": {
              "contractScope": null,
              "id": 3535,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4411,
              "src": "324:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4411",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "318:24:4",
            "typeName": {
              "id": 3536,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "337:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3541,
            "name": "AdminApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3539,
                  "indexed": false,
                  "name": "_approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 3541,
                  "src": "370:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "369:19:4"
            },
            "src": "350:39:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3545,
            "name": "AdminRevoked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3543,
                  "indexed": false,
                  "name": "_revoked",
                  "nodeType": "VariableDeclaration",
                  "scope": 3545,
                  "src": "414:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "413:18:4"
            },
            "src": "395:37:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3551,
            "name": "GroupCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3547,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 3551,
                  "src": "457:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3549,
                  "indexed": false,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3551,
                  "src": "473:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "456:29:4"
            },
            "src": "438:48:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3557,
            "name": "Remitted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3553,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 3557,
                  "src": "507:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3555,
                  "indexed": false,
                  "name": "_period",
                  "nodeType": "VariableDeclaration",
                  "scope": 3557,
                  "src": "523:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3554,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "506:30:4"
            },
            "src": "492:45:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3561,
            "name": "Loaned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3559,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 3561,
                  "src": "556:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "555:16:4"
            },
            "src": "543:29:4"
          },
          {
            "canonicalName": "IService.subperiod",
            "id": 3567,
            "members": [
              {
                "id": 3562,
                "name": "LOBBY",
                "nodeType": "EnumValue",
                "src": "596:5:4"
              },
              {
                "id": 3563,
                "name": "PRE",
                "nodeType": "EnumValue",
                "src": "603:3:4"
              },
              {
                "id": 3564,
                "name": "ACTIVE",
                "nodeType": "EnumValue",
                "src": "608:6:4"
              },
              {
                "id": 3565,
                "name": "POST",
                "nodeType": "EnumValue",
                "src": "616:4:4"
              },
              {
                "id": 3566,
                "name": "ENDED",
                "nodeType": "EnumValue",
                "src": "622:5:4"
              }
            ],
            "name": "subperiod",
            "nodeType": "EnumDefinition",
            "src": "580:48:4"
          },
          {
            "constant": false,
            "id": 3571,
            "name": "administrators",
            "nodeType": "VariableDeclaration",
            "scope": 3643,
            "src": "636:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3570,
              "keyType": {
                "id": 3568,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "644:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "636:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3569,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "655:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3575,
            "name": "secretaries",
            "nodeType": "VariableDeclaration",
            "scope": 3643,
            "src": "682:36:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3574,
              "keyType": {
                "id": 3572,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "690:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "682:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3573,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "701:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3579,
            "name": "groups",
            "nodeType": "VariableDeclaration",
            "scope": 3643,
            "src": "725:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 3578,
              "keyType": {
                "id": 3576,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "733:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "725:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 3577,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "741:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3581,
            "name": "Dai",
            "nodeType": "VariableDeclaration",
            "scope": 3643,
            "src": "765:10:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4972",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 3580,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4972,
              "src": "765:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4972",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3583,
            "name": "groupCount",
            "nodeType": "VariableDeclaration",
            "scope": 3643,
            "src": "784:15:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3582,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "784:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nAdd an admin\r\n@param _to the address being whitelisted\r*",
            "id": 3588,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3585,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3588,
                  "src": "978:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "977:13:4"
            },
            "returnParameters": {
              "id": 3587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:0:4"
            },
            "scope": 3643,
            "src": "960:38:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nRemove an admin\r\n@param _from the address being blacklisted\r*",
            "id": 3593,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3590,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3593,
                  "src": "1153:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1152:15:4"
            },
            "returnParameters": {
              "id": 3592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1174:0:4"
            },
            "scope": 3643,
            "src": "1132:43:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nApprove a secretary and create a new group\r\n@param _to the address being given a secretary role\r\n@param _volume uint number of expected claims\r\n@param _payout uint number of Dai paid per claim\r\n@return _group the address of the Group contact\r*",
            "id": 3604,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createGroup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3595,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3604,
                  "src": "1533:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1533:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3597,
                  "name": "_volume",
                  "nodeType": "VariableDeclaration",
                  "scope": 3604,
                  "src": "1546:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3596,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1546:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3599,
                  "name": "_payout",
                  "nodeType": "VariableDeclaration",
                  "scope": 3604,
                  "src": "1560:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3598,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1560:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1532:41:4"
            },
            "returnParameters": {
              "id": 3603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3602,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 3604,
                  "src": "1590:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1589:16:4"
            },
            "scope": 3643,
            "src": "1512:94:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\n@dev modifier unlocked\r\nRemit a single group assuming it is not timelocked\r\n@param _group the address of the group being remitted\r*",
            "id": 3609,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remitGroup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3606,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 3609,
                  "src": "1837:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1837:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1836:16:4"
            },
            "returnParameters": {
              "id": 3608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1859:0:4"
            },
            "scope": 3643,
            "src": "1817:43:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\n@dev require sufficienct balance\r\nExtend a loan, in Dai, to a Tanda Group\r\n@param _group the group being given the loan\r\n@param _months the length, in months (periods), the Group has to repay\r",
            "id": 3616,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "loan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3611,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 3616,
                  "src": "2153:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2153:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3613,
                  "name": "_months",
                  "nodeType": "VariableDeclaration",
                  "scope": 3616,
                  "src": "2169:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3612,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2169:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2152:30:4"
            },
            "returnParameters": {
              "id": 3615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2189:0:4"
            },
            "scope": 3643,
            "src": "2139:51:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "Query an address to determine if it currently holds an Administrator role in the Service\r\n@param _query address being queried as Administrator\r\n@return bool true if the address is an Administrator, and false otherwise\r",
            "id": 3623,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3618,
                  "name": "_query",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "2505:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2505:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2504:16:4"
            },
            "returnParameters": {
              "id": 3622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3621,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "2542:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3620,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2542:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2541:6:4"
            },
            "scope": 3643,
            "src": "2488:60:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "Determine if an address is a Secretary by returning the index of their group\r\n@param _query address being queried as Secretary\r\n@return _index uint stored index of Secretary's Group; returns 0 if none\r",
            "id": 3630,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isSecretary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3625,
                  "name": "_query",
                  "nodeType": "VariableDeclaration",
                  "scope": 3630,
                  "src": "2818:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2818:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2817:16:4"
            },
            "returnParameters": {
              "id": 3629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3628,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 3630,
                  "src": "2855:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3627,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2855:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2854:13:4"
            },
            "scope": 3643,
            "src": "2797:71:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "Determine the Group address stored internally at a specific index\r\n@param _index uint key to return address value in mapping 'groups'\r\n@return the address stored at the queried index. Returns 0x00 if none\r",
            "id": 3637,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getGroup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3632,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 3637,
                  "src": "3139:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3631,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3139:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3138:13:4"
            },
            "returnParameters": {
              "id": 3636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3635,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 3637,
                  "src": "3173:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3173:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3172:16:4"
            },
            "scope": 3643,
            "src": "3121:68:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "Determine the number of insurance groups deployed by this Service\r\n@return _index uint number of deployed Group child contracts deployed\r",
            "id": 3642,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getGroupCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3389:2:4"
            },
            "returnParameters": {
              "id": 3641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3640,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 3642,
                  "src": "3413:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3639,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3413:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3412:13:4"
            },
            "scope": 3643,
            "src": "3367:59:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3644,
        "src": "291:3140:4"
      }
    ],
    "src": "0:3433:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-11-18T07:21:39.892Z",
  "devdoc": {
    "author": "blOX Consulting LLC\r Date: 08.26.2019\r Interface for Insurance Service/ Group Factory Contract\r",
    "methods": {
      "addAdmin(address)": {
        "details": "modifier onlyAdmin\r Add an admin\r",
        "params": {
          "_to": "the address being whitelisted\r*"
        }
      },
      "createGroup(address,uint256,uint256)": {
        "details": "modifier onlyAdmin\r Approve a secretary and create a new group\r",
        "params": {
          "_payout": "uint number of Dai paid per claim\r",
          "_to": "the address being given a secretary role\r",
          "_volume": "uint number of expected claims\r"
        },
        "return": "_group the address of the Group contact\r*"
      },
      "getGroup(uint256)": {
        "params": {
          "_index": "uint key to return address value in mapping 'groups'\r"
        },
        "return": "the address stored at the queried index. Returns 0x00 if none\r"
      },
      "getGroupCount()": {
        "return": "_index uint number of deployed Group child contracts deployed\r"
      },
      "isAdmin(address)": {
        "params": {
          "_query": "address being queried as Administrator\r"
        },
        "return": "bool true if the address is an Administrator, and false otherwise\r"
      },
      "isSecretary(address)": {
        "params": {
          "_query": "address being queried as Secretary\r"
        },
        "return": "_index uint stored index of Secretary's Group; returns 0 if none\r"
      },
      "loan(address,uint256)": {
        "details": "modifier onlyAdmin\rrequire sufficienct balance\r Extend a loan, in Dai, to a Tanda Group\r",
        "params": {
          "_group": "the group being given the loan\r",
          "_months": "the length, in months (periods), the Group has to repay\r"
        }
      },
      "remitGroup(address)": {
        "details": "modifier onlyAdmin\rmodifier unlocked\r Remit a single group assuming it is not timelocked\r",
        "params": {
          "_group": "the address of the group being remitted\r*"
        }
      },
      "removeAdmin(address)": {
        "details": "modifier onlyAdmin\r Remove an admin\r",
        "params": {
          "_from": "the address being blacklisted\r*"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "getGroup(uint256)": {
        "notice": "Determine the Group address stored internally at a specific index\r"
      },
      "getGroupCount()": {
        "notice": "Determine the number of insurance groups deployed by this Service\r"
      },
      "isAdmin(address)": {
        "notice": "Query an address to determine if it currently holds an Administrator role in the Service\r"
      },
      "isSecretary(address)": {
        "notice": "Determine if an address is a Secretary by returning the index of their group\r"
      }
    }
  }
}