{
  "contractName": "ITandaPayService",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_approved",
          "type": "address"
        }
      ],
      "name": "AdminApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_revoked",
          "type": "address"
        }
      ],
      "name": "AdminRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_group",
          "type": "address"
        }
      ],
      "name": "GroupCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_revoked",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_group",
          "type": "address"
        }
      ],
      "name": "SecretaryRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_group",
          "type": "address"
        }
      ],
      "name": "SecretaryInstalled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_group",
          "type": "address"
        }
      ],
      "name": "Remitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_group",
          "type": "address"
        }
      ],
      "name": "Loaned",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_premium",
          "type": "uint8"
        }
      ],
      "name": "createGroup",
      "outputs": [
        {
          "name": "_group",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        }
      ],
      "name": "removeSecretary",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_secretary",
          "type": "address"
        },
        {
          "name": "_group",
          "type": "address"
        }
      ],
      "name": "installSecretary",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "processAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_group",
          "type": "address"
        }
      ],
      "name": "remitGroup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_group",
          "type": "address"
        }
      ],
      "name": "loan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"processAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"removeSecretary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_secretary\",\"type\":\"address\"},{\"name\":\"_group\",\"type\":\"address\"}],\"name\":\"installSecretary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_group\",\"type\":\"address\"}],\"name\":\"loan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_group\",\"type\":\"address\"}],\"name\":\"remitGroup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_premium\",\"type\":\"uint8\"}],\"name\":\"createGroup\",\"outputs\":[{\"name\":\"_group\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_approved\",\"type\":\"address\"}],\"name\":\"AdminApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_revoked\",\"type\":\"address\"}],\"name\":\"AdminRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_group\",\"type\":\"address\"}],\"name\":\"GroupCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_revoked\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_group\",\"type\":\"address\"}],\"name\":\"SecretaryRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_group\",\"type\":\"address\"}],\"name\":\"SecretaryInstalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_group\",\"type\":\"address\"}],\"name\":\"Remitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_group\",\"type\":\"address\"}],\"name\":\"Loaned\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"blOX Consulting LLC.\\r Date: 6.17.19\\r Interface for main TandaPay service\\r Factory contract for groups\\r CRON/ Admin functionality\\r*\",\"methods\":{\"addAdmin(address)\":{\"details\":\"modifier onlyAdmin\\r Add an admin\\radd timelock\\r*\",\"params\":{\"_to\":\"the address being whitelisted\\r\"}},\"createGroup(address,uint8)\":{\"details\":\"modifier isAdmin\\rmodifier validPremium\\rconstruct new Group(_to, _premium)\\r Approve a secretary and create a new group\\r\",\"params\":{\"_premium\":\"the premium paid in Dai by all policyholders\\r\",\"_to\":\"the address being given a secretary role\\r\"},\"return\":\"_group the address of the Group contact\\r*\"},\"installSecretary(address,address)\":{\"details\":\"modifier isAdmin\\ronly if group's construction Secretary was removed\\r Give a group a new secretary\\r\",\"params\":{\"_group\":\"the address of the Group contract\\r*\",\"_secretary\":\"the address being given the role of Secretary\\r\"}},\"loan(address)\":{\"details\":\"modifier onlyAdmin\\r Extend a loan, in Dai, to a Tanda Group\\rrequire sufficienct balance\\r\",\"params\":{\"_group\":\"the group being given the loan\\r\"},\"return\":\"the total loan amount\\r\"},\"processAll()\":{\"details\":\"modifier onlyAdmin\\r Remit all groups available to be remitted\\rgas-heavy failsafe, processAll should be done 'manually' by web3\\r*\"},\"remitGroup(address)\":{\"details\":\"modifier onlyAdmin\\rmodifier unlocked\\r Remit a single group assuming it is not timelocked\\r\",\"params\":{\"_group\":\"the address of the group being remitted\\r*\"}},\"removeAdmin(address)\":{\"details\":\"modifier onlyAdmin\\r Remove an admin\\radd timelock\\r*\",\"params\":{\"_from\":\"the address being blacklisted\\r\"}},\"removeSecretary(address)\":{\"details\":\"modifier onlyAdmin\\r Remove secretary\\rOwnership of Tanda group assigned to this contract\\r*\",\"params\":{\"_from\":\"the address being revoked the secretary role\\r\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Coda/Desktop/TandaPay/contracts/ITandaPayService.sol\":\"ITandaPayService\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Coda/Desktop/TandaPay/contracts/ITandaPayService.sol\":{\"keccak256\":\"0xf22a57b3822967e30ac34cb71c25661e753a709f8cadf63842c980e65e78175d\",\"urls\":[\"bzzr://764cb055d777659ff529fb45dc93bc00bbce19d29c1970812d2bd072e71afb95\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzzr://ecd0352164978c418c8f5b0080c972b65e4b07f6afc593fb7cdd856185a458ea\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity >= 0.4.0 < 0.7.0;\r\n\r\nimport 'openzeppelin-solidity/contracts/token/ERC20/IERC20.sol';\r\nimport 'openzeppelin-solidity/contracts/drafts/Counters.sol';\r\n\r\n/**\r\n * @author blOX Consulting LLC.\r\n * Date: 6.17.19\r\n * Interface for main TandaPay service\r\n * Factory contract for groups\r\n * CRON/ Admin functionality\r\n **/\r\ncontract ITandaPayService {\r\n\r\n    using Counters for Counters.Counter;\r\n\r\n    ///EVENTS///\r\n    event AdminApproved(address _approved);\r\n    event AdminRevoked(address _revoked);\r\n    event GroupCreated(address _group);\r\n    event SecretaryRevoked(address _revoked, address _group);\r\n    event SecretaryInstalled(address _group);\r\n    event Remitted(address _group);\r\n    event Loaned(address _group);\r\n\r\n    ///MAPPING///\r\n    mapping(address => bool) administrators;\r\n    mapping(address => uint) secretaries;\r\n    mapping(uint => address) groups;\r\n\r\n    ///STRUCTS///\r\n    struct Claim {\r\n        address policyholder;\r\n        claimState state;\r\n    }\r\n    \r\n    struct Period {\r\n        Counters.Counter claimIndex;\r\n        mapping(uint8 => Claim) claims;\r\n        mapping(address => uint8) openedClaim;\r\n    }\r\n\r\n    ///CONTRACTS///\r\n    IERC20 Dai;\r\n    Counters.Counter groupCount;\r\n    \r\n    ///ENUMERATIONS///\r\n    enum periodState {LOBBY, PRE, ACTIVE, POST}\r\n    enum claimState {REJECTED, OPEN, ACCEPTED}\r\n\r\n    ///INTEGERS///\r\n    uint8 constant MIN_PREMIUM = 5;\r\n    uint8 constant MAX_PREMIUM = 50;\r\n\r\n    ///MODIFIERS///\r\n     modifier isAdmin() {\r\n        require(administrators[msg.sender], \"Address is not a TandaPay Administrator!\");\r\n        _;\r\n    }\r\n\r\n    ///FUNCTIONS///\r\n    /**\r\n     * @dev modifier onlyAdmin\r\n     * Add an admin\r\n     * @param _to the address being whitelisted\r\n     * @dev add timelock\r\n     **/\r\n    function addAdmin(address _to) public;\r\n\r\n    /**\r\n     * @dev modifier onlyAdmin\r\n     * Remove an admin\r\n     * @param _from the address being blacklisted\r\n     * @dev add timelock\r\n     **/\r\n    function removeAdmin(address _from) public;\r\n\r\n    /**\r\n     * @dev modifier isAdmin\r\n     * @dev modifier validPremium\r\n     * @dev construct new Group(_to, _premium)\r\n     * Approve a secretary and create a new group\r\n     * @param _to the address being given a secretary role\r\n     * @param _premium the premium paid in Dai by all policyholders\r\n     * @return _group the address of the Group contact\r\n     **/\r\n    function createGroup(address _to, uint8 _premium) public returns (address _group);\r\n\r\n    /**\r\n     * @dev modifier onlyAdmin\r\n     * Remove secretary\r\n     * @param _from the address being revoked the secretary role\r\n     * @dev Ownership of Tanda group assigned to this contract\r\n     **/\r\n    function removeSecretary(address _from) public;\r\n    \r\n    /**\r\n     * @dev modifier isAdmin\r\n     * @dev only if group's construction Secretary was removed\r\n     * Give a group a new secretary\r\n     * @param _secretary the address being given the role of Secretary\r\n     * @param _group the address of the Group contract\r\n     **/\r\n    function installSecretary(address _secretary, address _group) public;\r\n\r\n    /**\r\n     * @dev modifier onlyAdmin\r\n     * Remit all groups available to be remitted\r\n     * @dev gas-heavy failsafe, processAll should be done 'manually' by web3\r\n     **/\r\n    function processAll() public;\r\n\r\n    /**\r\n     * @dev modifier onlyAdmin\r\n     * @dev modifier unlocked\r\n     * Remit a single group assuming it is not timelocked\r\n     * @param _group the address of the group being remitted\r\n     **/\r\n    function remitGroup(address _group) public;\r\n\r\n    /**\r\n     * @dev modifier onlyAdmin\r\n     * Extend a loan, in Dai, to a Tanda Group\r\n     * @param _group the group being given the loan\r\n     * @return the total loan amount\r\n     * @dev require sufficienct balance\r\n     */\r\n    function loan(address _group) public;\r\n\r\n}",
  "sourcePath": "C:/Users/Coda/Desktop/TandaPay/contracts/ITandaPayService.sol",
  "ast": {
    "absolutePath": "/C/Users/Coda/Desktop/TandaPay/contracts/ITandaPayService.sol",
    "exportedSymbols": {
      "ITandaPayService": [
        2197
      ]
    },
    "id": 2198,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2058,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 2059,
        "nodeType": "ImportDirective",
        "scope": 2198,
        "sourceUnit": 3537,
        "src": "37:64:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/drafts/Counters.sol",
        "file": "openzeppelin-solidity/contracts/drafts/Counters.sol",
        "id": 2060,
        "nodeType": "ImportDirective",
        "scope": 2198,
        "sourceUnit": 2843,
        "src": "103:61:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@author blOX Consulting LLC.\r\nDate: 6.17.19\r\nInterface for main TandaPay service\r\nFactory contract for groups\r\nCRON/ Admin functionality\r*",
        "fullyImplemented": false,
        "id": 2197,
        "linearizedBaseContracts": [
          2197
        ],
        "name": "ITandaPayService",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2063,
            "libraryName": {
              "contractScope": null,
              "id": 2061,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2842,
              "src": "373:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$2842",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "367:36:4",
            "typeName": {
              "contractScope": null,
              "id": 2062,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2802,
              "src": "386:16:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2802_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": "EVENTS///",
            "id": 2067,
            "name": "AdminApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2065,
                  "indexed": false,
                  "name": "_approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 2067,
                  "src": "449:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "448:19:4"
            },
            "src": "429:39:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2071,
            "name": "AdminRevoked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2069,
                  "indexed": false,
                  "name": "_revoked",
                  "nodeType": "VariableDeclaration",
                  "scope": 2071,
                  "src": "493:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "492:18:4"
            },
            "src": "474:37:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2075,
            "name": "GroupCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2073,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2075,
                  "src": "536:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "535:16:4"
            },
            "src": "517:35:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2081,
            "name": "SecretaryRevoked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2077,
                  "indexed": false,
                  "name": "_revoked",
                  "nodeType": "VariableDeclaration",
                  "scope": 2081,
                  "src": "581:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2079,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2081,
                  "src": "599:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "580:34:4"
            },
            "src": "558:57:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2085,
            "name": "SecretaryInstalled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2083,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2085,
                  "src": "646:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2082,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "645:16:4"
            },
            "src": "621:41:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2089,
            "name": "Remitted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2087,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2089,
                  "src": "683:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "682:16:4"
            },
            "src": "668:31:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2093,
            "name": "Loaned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2091,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2093,
                  "src": "718:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "717:16:4"
            },
            "src": "705:29:4"
          },
          {
            "constant": false,
            "id": 2097,
            "name": "administrators",
            "nodeType": "VariableDeclaration",
            "scope": 2197,
            "src": "761:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2096,
              "keyType": {
                "id": 2094,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "769:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "761:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2095,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "780:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2101,
            "name": "secretaries",
            "nodeType": "VariableDeclaration",
            "scope": 2197,
            "src": "807:36:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2100,
              "keyType": {
                "id": 2098,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "815:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "807:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2099,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "826:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2105,
            "name": "groups",
            "nodeType": "VariableDeclaration",
            "scope": 2197,
            "src": "850:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 2104,
              "keyType": {
                "id": 2102,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "858:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "850:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 2103,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "866:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "ITandaPayService.Claim",
            "id": 2110,
            "members": [
              {
                "constant": false,
                "id": 2107,
                "name": "policyholder",
                "nodeType": "VariableDeclaration",
                "scope": 2110,
                "src": "933:20:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2106,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "933:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2109,
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 2110,
                "src": "964:16:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_claimState_$2134",
                  "typeString": "enum ITandaPayService.claimState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 2108,
                  "name": "claimState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2134,
                  "src": "964:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_claimState_$2134",
                    "typeString": "enum ITandaPayService.claimState"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nodeType": "StructDefinition",
            "scope": 2197,
            "src": "909:79:4",
            "visibility": "public"
          },
          {
            "canonicalName": "ITandaPayService.Period",
            "id": 2121,
            "members": [
              {
                "constant": false,
                "id": 2112,
                "name": "claimIndex",
                "nodeType": "VariableDeclaration",
                "scope": 2121,
                "src": "1025:27:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Counter_$2802_storage_ptr",
                  "typeString": "struct Counters.Counter"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 2111,
                  "name": "Counters.Counter",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2802,
                  "src": "1025:16:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2802_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2116,
                "name": "claims",
                "nodeType": "VariableDeclaration",
                "scope": 2121,
                "src": "1063:30:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Claim_$2110_storage_$",
                  "typeString": "mapping(uint8 => struct ITandaPayService.Claim)"
                },
                "typeName": {
                  "id": 2115,
                  "keyType": {
                    "id": 2113,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1063:23:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Claim_$2110_storage_$",
                    "typeString": "mapping(uint8 => struct ITandaPayService.Claim)"
                  },
                  "valueType": {
                    "contractScope": null,
                    "id": 2114,
                    "name": "Claim",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2110,
                    "src": "1080:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$2110_storage_ptr",
                      "typeString": "struct ITandaPayService.Claim"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2120,
                "name": "openedClaim",
                "nodeType": "VariableDeclaration",
                "scope": 2121,
                "src": "1104:37:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                  "typeString": "mapping(address => uint8)"
                },
                "typeName": {
                  "id": 2119,
                  "keyType": {
                    "id": 2117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1104:25:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                    "typeString": "mapping(address => uint8)"
                  },
                  "valueType": {
                    "id": 2118,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1123:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Period",
            "nodeType": "StructDefinition",
            "scope": 2197,
            "src": "1000:149:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2123,
            "name": "Dai",
            "nodeType": "VariableDeclaration",
            "scope": 2197,
            "src": "1178:10:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3536",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2122,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3536,
              "src": "1178:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3536",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2125,
            "name": "groupCount",
            "nodeType": "VariableDeclaration",
            "scope": 2197,
            "src": "1195:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2802_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 2124,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2802,
              "src": "1195:16:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2802_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "ITandaPayService.periodState",
            "id": 2130,
            "members": [
              {
                "id": 2126,
                "name": "LOBBY",
                "nodeType": "EnumValue",
                "src": "1277:5:4"
              },
              {
                "id": 2127,
                "name": "PRE",
                "nodeType": "EnumValue",
                "src": "1284:3:4"
              },
              {
                "id": 2128,
                "name": "ACTIVE",
                "nodeType": "EnumValue",
                "src": "1289:6:4"
              },
              {
                "id": 2129,
                "name": "POST",
                "nodeType": "EnumValue",
                "src": "1297:4:4"
              }
            ],
            "name": "periodState",
            "nodeType": "EnumDefinition",
            "src": "1259:43:4"
          },
          {
            "canonicalName": "ITandaPayService.claimState",
            "id": 2134,
            "members": [
              {
                "id": 2131,
                "name": "REJECTED",
                "nodeType": "EnumValue",
                "src": "1325:8:4"
              },
              {
                "id": 2132,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "1335:4:4"
              },
              {
                "id": 2133,
                "name": "ACCEPTED",
                "nodeType": "EnumValue",
                "src": "1341:8:4"
              }
            ],
            "name": "claimState",
            "nodeType": "EnumDefinition",
            "src": "1308:42:4"
          },
          {
            "constant": true,
            "id": 2137,
            "name": "MIN_PREMIUM",
            "nodeType": "VariableDeclaration",
            "scope": 2197,
            "src": "1378:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2135,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1378:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 2136,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1407:1:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 2140,
            "name": "MAX_PREMIUM",
            "nodeType": "VariableDeclaration",
            "scope": 2197,
            "src": "1415:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2138,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1415:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530",
              "id": 2139,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1444:2:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2151,
              "nodeType": "Block",
              "src": "1496:110:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2143,
                          "name": "administrators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2097,
                          "src": "1515:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 2146,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2144,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3551,
                            "src": "1530:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1530:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1515:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206973206e6f7420612054616e64615061792041646d696e6973747261746f7221",
                        "id": 2147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1543:42:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6bba04f9566912cd20039c29cc07adc1278ae34294c2a98902ba6975ed9ce640",
                          "typeString": "literal_string \"Address is not a TandaPay Administrator!\""
                        },
                        "value": "Address is not a TandaPay Administrator!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6bba04f9566912cd20039c29cc07adc1278ae34294c2a98902ba6975ed9ce640",
                          "typeString": "literal_string \"Address is not a TandaPay Administrator!\""
                        }
                      ],
                      "id": 2142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3554,
                        3555
                      ],
                      "referencedDeclaration": 3555,
                      "src": "1507:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:79:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2149,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:79:4"
                },
                {
                  "id": 2150,
                  "nodeType": "PlaceholderStatement",
                  "src": "1597:1:4"
                }
              ]
            },
            "documentation": "MODIFIERS///",
            "id": 2152,
            "name": "isAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:2:4"
            },
            "src": "1477:129:4",
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nAdd an admin\r\n@param _to the address being whitelisted\r\n@dev add timelock\r*",
            "id": 2157,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2154,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2157,
                  "src": "1800:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1800:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1799:13:4"
            },
            "returnParameters": {
              "id": 2156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1819:0:4"
            },
            "scope": 2197,
            "src": "1782:38:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nRemove an admin\r\n@param _from the address being blacklisted\r\n@dev add timelock\r*",
            "id": 2162,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2159,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "2001:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2001:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2000:15:4"
            },
            "returnParameters": {
              "id": 2161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2022:0:4"
            },
            "scope": 2197,
            "src": "1980:43:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isAdmin\r\n@dev modifier validPremium\r\n@dev construct new Group(_to, _premium)\r\nApprove a secretary and create a new group\r\n@param _to the address being given a secretary role\r\n@param _premium the premium paid in Dai by all policyholders\r\n@return _group the address of the Group contact\r*",
            "id": 2171,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createGroup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2164,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2171,
                  "src": "2420:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2420:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2166,
                  "name": "_premium",
                  "nodeType": "VariableDeclaration",
                  "scope": 2171,
                  "src": "2433:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2165,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2433:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2419:29:4"
            },
            "returnParameters": {
              "id": 2170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2169,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2171,
                  "src": "2465:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2465:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2464:16:4"
            },
            "scope": 2197,
            "src": "2399:82:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nRemove secretary\r\n@param _from the address being revoked the secretary role\r\n@dev Ownership of Tanda group assigned to this contract\r*",
            "id": 2176,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeSecretary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2173,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2176,
                  "src": "2720:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2719:15:4"
            },
            "returnParameters": {
              "id": 2175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2741:0:4"
            },
            "scope": 2197,
            "src": "2695:47:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isAdmin\r\n@dev only if group's construction Secretary was removed\r\nGive a group a new secretary\r\n@param _secretary the address being given the role of Secretary\r\n@param _group the address of the Group contract\r*",
            "id": 2183,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "installSecretary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2178,
                  "name": "_secretary",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "3058:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3058:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2180,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "3078:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3078:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3057:36:4"
            },
            "returnParameters": {
              "id": 2182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3100:0:4"
            },
            "scope": 2197,
            "src": "3032:69:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nRemit all groups available to be remitted\r\n@dev gas-heavy failsafe, processAll should be done 'manually' by web3\r*",
            "id": 2186,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "processAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3307:2:4"
            },
            "returnParameters": {
              "id": 2185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3316:0:4"
            },
            "scope": 2197,
            "src": "3288:29:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\n@dev modifier unlocked\r\nRemit a single group assuming it is not timelocked\r\n@param _group the address of the group being remitted\r*",
            "id": 2191,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remitGroup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2188,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "3548:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3548:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3547:16:4"
            },
            "returnParameters": {
              "id": 2190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3570:0:4"
            },
            "scope": 2197,
            "src": "3528:43:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nExtend a loan, in Dai, to a Tanda Group\r\n@param _group the group being given the loan\r\n@return the total loan amount\r\n@dev require sufficienct balance\r",
            "id": 2196,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "loan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2193,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2196,
                  "src": "3823:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3823:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3822:16:4"
            },
            "returnParameters": {
              "id": 2195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3845:0:4"
            },
            "scope": 2197,
            "src": "3809:37:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2198,
        "src": "332:3519:4"
      }
    ],
    "src": "0:3851:4"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Coda/Desktop/TandaPay/contracts/ITandaPayService.sol",
    "exportedSymbols": {
      "ITandaPayService": [
        2197
      ]
    },
    "id": 2198,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2058,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 2059,
        "nodeType": "ImportDirective",
        "scope": 2198,
        "sourceUnit": 3537,
        "src": "37:64:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/drafts/Counters.sol",
        "file": "openzeppelin-solidity/contracts/drafts/Counters.sol",
        "id": 2060,
        "nodeType": "ImportDirective",
        "scope": 2198,
        "sourceUnit": 2843,
        "src": "103:61:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@author blOX Consulting LLC.\r\nDate: 6.17.19\r\nInterface for main TandaPay service\r\nFactory contract for groups\r\nCRON/ Admin functionality\r*",
        "fullyImplemented": false,
        "id": 2197,
        "linearizedBaseContracts": [
          2197
        ],
        "name": "ITandaPayService",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2063,
            "libraryName": {
              "contractScope": null,
              "id": 2061,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2842,
              "src": "373:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$2842",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "367:36:4",
            "typeName": {
              "contractScope": null,
              "id": 2062,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2802,
              "src": "386:16:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2802_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": "EVENTS///",
            "id": 2067,
            "name": "AdminApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2065,
                  "indexed": false,
                  "name": "_approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 2067,
                  "src": "449:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "448:19:4"
            },
            "src": "429:39:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2071,
            "name": "AdminRevoked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2069,
                  "indexed": false,
                  "name": "_revoked",
                  "nodeType": "VariableDeclaration",
                  "scope": 2071,
                  "src": "493:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "492:18:4"
            },
            "src": "474:37:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2075,
            "name": "GroupCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2073,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2075,
                  "src": "536:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "535:16:4"
            },
            "src": "517:35:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2081,
            "name": "SecretaryRevoked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2077,
                  "indexed": false,
                  "name": "_revoked",
                  "nodeType": "VariableDeclaration",
                  "scope": 2081,
                  "src": "581:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2079,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2081,
                  "src": "599:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "580:34:4"
            },
            "src": "558:57:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2085,
            "name": "SecretaryInstalled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2083,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2085,
                  "src": "646:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2082,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "645:16:4"
            },
            "src": "621:41:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2089,
            "name": "Remitted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2087,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2089,
                  "src": "683:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "682:16:4"
            },
            "src": "668:31:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2093,
            "name": "Loaned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2091,
                  "indexed": false,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2093,
                  "src": "718:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "717:16:4"
            },
            "src": "705:29:4"
          },
          {
            "constant": false,
            "id": 2097,
            "name": "administrators",
            "nodeType": "VariableDeclaration",
            "scope": 2197,
            "src": "761:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2096,
              "keyType": {
                "id": 2094,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "769:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "761:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2095,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "780:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2101,
            "name": "secretaries",
            "nodeType": "VariableDeclaration",
            "scope": 2197,
            "src": "807:36:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2100,
              "keyType": {
                "id": 2098,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "815:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "807:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2099,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "826:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2105,
            "name": "groups",
            "nodeType": "VariableDeclaration",
            "scope": 2197,
            "src": "850:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 2104,
              "keyType": {
                "id": 2102,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "858:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "850:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 2103,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "866:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "ITandaPayService.Claim",
            "id": 2110,
            "members": [
              {
                "constant": false,
                "id": 2107,
                "name": "policyholder",
                "nodeType": "VariableDeclaration",
                "scope": 2110,
                "src": "933:20:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2106,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "933:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2109,
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 2110,
                "src": "964:16:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_claimState_$2134",
                  "typeString": "enum ITandaPayService.claimState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 2108,
                  "name": "claimState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2134,
                  "src": "964:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_claimState_$2134",
                    "typeString": "enum ITandaPayService.claimState"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nodeType": "StructDefinition",
            "scope": 2197,
            "src": "909:79:4",
            "visibility": "public"
          },
          {
            "canonicalName": "ITandaPayService.Period",
            "id": 2121,
            "members": [
              {
                "constant": false,
                "id": 2112,
                "name": "claimIndex",
                "nodeType": "VariableDeclaration",
                "scope": 2121,
                "src": "1025:27:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Counter_$2802_storage_ptr",
                  "typeString": "struct Counters.Counter"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 2111,
                  "name": "Counters.Counter",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2802,
                  "src": "1025:16:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2802_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2116,
                "name": "claims",
                "nodeType": "VariableDeclaration",
                "scope": 2121,
                "src": "1063:30:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Claim_$2110_storage_$",
                  "typeString": "mapping(uint8 => struct ITandaPayService.Claim)"
                },
                "typeName": {
                  "id": 2115,
                  "keyType": {
                    "id": 2113,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1063:23:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Claim_$2110_storage_$",
                    "typeString": "mapping(uint8 => struct ITandaPayService.Claim)"
                  },
                  "valueType": {
                    "contractScope": null,
                    "id": 2114,
                    "name": "Claim",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2110,
                    "src": "1080:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$2110_storage_ptr",
                      "typeString": "struct ITandaPayService.Claim"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2120,
                "name": "openedClaim",
                "nodeType": "VariableDeclaration",
                "scope": 2121,
                "src": "1104:37:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                  "typeString": "mapping(address => uint8)"
                },
                "typeName": {
                  "id": 2119,
                  "keyType": {
                    "id": 2117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1104:25:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                    "typeString": "mapping(address => uint8)"
                  },
                  "valueType": {
                    "id": 2118,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1123:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Period",
            "nodeType": "StructDefinition",
            "scope": 2197,
            "src": "1000:149:4",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2123,
            "name": "Dai",
            "nodeType": "VariableDeclaration",
            "scope": 2197,
            "src": "1178:10:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3536",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 2122,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3536,
              "src": "1178:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3536",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2125,
            "name": "groupCount",
            "nodeType": "VariableDeclaration",
            "scope": 2197,
            "src": "1195:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2802_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 2124,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2802,
              "src": "1195:16:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2802_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "ITandaPayService.periodState",
            "id": 2130,
            "members": [
              {
                "id": 2126,
                "name": "LOBBY",
                "nodeType": "EnumValue",
                "src": "1277:5:4"
              },
              {
                "id": 2127,
                "name": "PRE",
                "nodeType": "EnumValue",
                "src": "1284:3:4"
              },
              {
                "id": 2128,
                "name": "ACTIVE",
                "nodeType": "EnumValue",
                "src": "1289:6:4"
              },
              {
                "id": 2129,
                "name": "POST",
                "nodeType": "EnumValue",
                "src": "1297:4:4"
              }
            ],
            "name": "periodState",
            "nodeType": "EnumDefinition",
            "src": "1259:43:4"
          },
          {
            "canonicalName": "ITandaPayService.claimState",
            "id": 2134,
            "members": [
              {
                "id": 2131,
                "name": "REJECTED",
                "nodeType": "EnumValue",
                "src": "1325:8:4"
              },
              {
                "id": 2132,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "1335:4:4"
              },
              {
                "id": 2133,
                "name": "ACCEPTED",
                "nodeType": "EnumValue",
                "src": "1341:8:4"
              }
            ],
            "name": "claimState",
            "nodeType": "EnumDefinition",
            "src": "1308:42:4"
          },
          {
            "constant": true,
            "id": 2137,
            "name": "MIN_PREMIUM",
            "nodeType": "VariableDeclaration",
            "scope": 2197,
            "src": "1378:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2135,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1378:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 2136,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1407:1:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 2140,
            "name": "MAX_PREMIUM",
            "nodeType": "VariableDeclaration",
            "scope": 2197,
            "src": "1415:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2138,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1415:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3530",
              "id": 2139,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1444:2:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2151,
              "nodeType": "Block",
              "src": "1496:110:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2143,
                          "name": "administrators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2097,
                          "src": "1515:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 2146,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2144,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3551,
                            "src": "1530:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1530:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1515:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206973206e6f7420612054616e64615061792041646d696e6973747261746f7221",
                        "id": 2147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1543:42:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6bba04f9566912cd20039c29cc07adc1278ae34294c2a98902ba6975ed9ce640",
                          "typeString": "literal_string \"Address is not a TandaPay Administrator!\""
                        },
                        "value": "Address is not a TandaPay Administrator!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6bba04f9566912cd20039c29cc07adc1278ae34294c2a98902ba6975ed9ce640",
                          "typeString": "literal_string \"Address is not a TandaPay Administrator!\""
                        }
                      ],
                      "id": 2142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3554,
                        3555
                      ],
                      "referencedDeclaration": 3555,
                      "src": "1507:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:79:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2149,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:79:4"
                },
                {
                  "id": 2150,
                  "nodeType": "PlaceholderStatement",
                  "src": "1597:1:4"
                }
              ]
            },
            "documentation": "MODIFIERS///",
            "id": 2152,
            "name": "isAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:2:4"
            },
            "src": "1477:129:4",
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nAdd an admin\r\n@param _to the address being whitelisted\r\n@dev add timelock\r*",
            "id": 2157,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2154,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2157,
                  "src": "1800:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1800:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1799:13:4"
            },
            "returnParameters": {
              "id": 2156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1819:0:4"
            },
            "scope": 2197,
            "src": "1782:38:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nRemove an admin\r\n@param _from the address being blacklisted\r\n@dev add timelock\r*",
            "id": 2162,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2159,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "2001:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2001:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2000:15:4"
            },
            "returnParameters": {
              "id": 2161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2022:0:4"
            },
            "scope": 2197,
            "src": "1980:43:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isAdmin\r\n@dev modifier validPremium\r\n@dev construct new Group(_to, _premium)\r\nApprove a secretary and create a new group\r\n@param _to the address being given a secretary role\r\n@param _premium the premium paid in Dai by all policyholders\r\n@return _group the address of the Group contact\r*",
            "id": 2171,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createGroup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2164,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2171,
                  "src": "2420:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2420:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2166,
                  "name": "_premium",
                  "nodeType": "VariableDeclaration",
                  "scope": 2171,
                  "src": "2433:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2165,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2433:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2419:29:4"
            },
            "returnParameters": {
              "id": 2170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2169,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2171,
                  "src": "2465:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2465:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2464:16:4"
            },
            "scope": 2197,
            "src": "2399:82:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nRemove secretary\r\n@param _from the address being revoked the secretary role\r\n@dev Ownership of Tanda group assigned to this contract\r*",
            "id": 2176,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeSecretary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2173,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2176,
                  "src": "2720:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2719:15:4"
            },
            "returnParameters": {
              "id": 2175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2741:0:4"
            },
            "scope": 2197,
            "src": "2695:47:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isAdmin\r\n@dev only if group's construction Secretary was removed\r\nGive a group a new secretary\r\n@param _secretary the address being given the role of Secretary\r\n@param _group the address of the Group contract\r*",
            "id": 2183,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "installSecretary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2178,
                  "name": "_secretary",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "3058:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3058:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2180,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "3078:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3078:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3057:36:4"
            },
            "returnParameters": {
              "id": 2182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3100:0:4"
            },
            "scope": 2197,
            "src": "3032:69:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nRemit all groups available to be remitted\r\n@dev gas-heavy failsafe, processAll should be done 'manually' by web3\r*",
            "id": 2186,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "processAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3307:2:4"
            },
            "returnParameters": {
              "id": 2185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3316:0:4"
            },
            "scope": 2197,
            "src": "3288:29:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\n@dev modifier unlocked\r\nRemit a single group assuming it is not timelocked\r\n@param _group the address of the group being remitted\r*",
            "id": 2191,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remitGroup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2188,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2191,
                  "src": "3548:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3548:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3547:16:4"
            },
            "returnParameters": {
              "id": 2190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3570:0:4"
            },
            "scope": 2197,
            "src": "3528:43:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyAdmin\r\nExtend a loan, in Dai, to a Tanda Group\r\n@param _group the group being given the loan\r\n@return the total loan amount\r\n@dev require sufficienct balance\r",
            "id": 2196,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "loan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2193,
                  "name": "_group",
                  "nodeType": "VariableDeclaration",
                  "scope": 2196,
                  "src": "3823:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3823:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3822:16:4"
            },
            "returnParameters": {
              "id": 2195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3845:0:4"
            },
            "scope": 2197,
            "src": "3809:37:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2198,
        "src": "332:3519:4"
      }
    ],
    "src": "0:3851:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-21T20:58:32.505Z",
  "devdoc": {
    "author": "blOX Consulting LLC.\r Date: 6.17.19\r Interface for main TandaPay service\r Factory contract for groups\r CRON/ Admin functionality\r*",
    "methods": {
      "addAdmin(address)": {
        "details": "modifier onlyAdmin\r Add an admin\radd timelock\r*",
        "params": {
          "_to": "the address being whitelisted\r"
        }
      },
      "createGroup(address,uint8)": {
        "details": "modifier isAdmin\rmodifier validPremium\rconstruct new Group(_to, _premium)\r Approve a secretary and create a new group\r",
        "params": {
          "_premium": "the premium paid in Dai by all policyholders\r",
          "_to": "the address being given a secretary role\r"
        },
        "return": "_group the address of the Group contact\r*"
      },
      "installSecretary(address,address)": {
        "details": "modifier isAdmin\ronly if group's construction Secretary was removed\r Give a group a new secretary\r",
        "params": {
          "_group": "the address of the Group contract\r*",
          "_secretary": "the address being given the role of Secretary\r"
        }
      },
      "loan(address)": {
        "details": "modifier onlyAdmin\r Extend a loan, in Dai, to a Tanda Group\rrequire sufficienct balance\r",
        "params": {
          "_group": "the group being given the loan\r"
        },
        "return": "the total loan amount\r"
      },
      "processAll()": {
        "details": "modifier onlyAdmin\r Remit all groups available to be remitted\rgas-heavy failsafe, processAll should be done 'manually' by web3\r*"
      },
      "remitGroup(address)": {
        "details": "modifier onlyAdmin\rmodifier unlocked\r Remit a single group assuming it is not timelocked\r",
        "params": {
          "_group": "the address of the group being remitted\r*"
        }
      },
      "removeAdmin(address)": {
        "details": "modifier onlyAdmin\r Remove an admin\radd timelock\r*",
        "params": {
          "_from": "the address being blacklisted\r"
        }
      },
      "removeSecretary(address)": {
        "details": "modifier onlyAdmin\r Remove secretary\rOwnership of Tanda group assigned to this contract\r*",
        "params": {
          "_from": "the address being revoked the secretary role\r"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}